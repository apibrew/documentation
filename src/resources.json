[
  {
    "id": "143b3e4a-6601-431b-9ab9-c120570ec799",
    "version": 174,
    "auditData": {
      "createdBy": "system",
      "updatedBy": "system",
      "createdOn": "2024-02-03T16:12:57Z",
      "updatedOn": "2024-02-24T12:03:36Z"
    },
    "name": "Code",
    "namespace": {
      "name": "nano"
    },
    "properties": {
      "annotations": {
        "type": "MAP",
        "item": {
          "type": "STRING"
        }
      },
      "auditData": {
        "type": "STRUCT",
        "typeRef": "AuditData",
        "exampleValue": {
          "createdBy": "admin",
          "createdOn": "2024-02-24T15:59:17+04:00",
          "updatedBy": "admin",
          "updatedOn": "2024-02-24T15:59:17+04:00"
        },
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "content": {
        "type": "STRING",
        "required": true,
        "length": 64000,
        "annotations": {
          "SQLType": "TEXT"
        }
      },
      "contentFormat": {
        "type": "ENUM",
        "required": true,
        "defaultValue": "TEXT",
        "enumValues": [
          "TEXT",
          "TAR",
          "TAR_GZ"
        ]
      },
      "id": {
        "type": "UUID",
        "primary": true,
        "required": true,
        "immutable": true,
        "exampleValue": "a39621a4-6d48-11ee-b962-0242ac120002",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "language": {
        "type": "ENUM",
        "required": true,
        "enumValues": [
          "PYTHON",
          "JAVASCRIPT"
        ]
      },
      "name": {
        "type": "STRING",
        "required": true,
        "unique": true,
        "immutable": true,
        "length": 255
      },
      "version": {
        "type": "INT32",
        "required": true,
        "defaultValue": 1,
        "exampleValue": 1,
        "annotations": {
          "AllowEmptyPrimitive": "true",
          "SpecialProperty": "true"
        }
      }
    },
    "types": [
      {
        "name": "AuditData",
        "title": "Audit Data",
        "description": "Audit Data is a type that represents the audit data of a resource/record. ",
        "properties": {
          "createdBy": {
            "type": "STRING",
            "immutable": true,
            "length": 256,
            "exampleValue": "admin",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "createdOn": {
            "type": "TIMESTAMP",
            "immutable": true,
            "exampleValue": "2024-02-24T15:59:17+04:00",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "updatedBy": {
            "type": "STRING",
            "length": 256,
            "exampleValue": "admin",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "updatedOn": {
            "type": "TIMESTAMP",
            "exampleValue": "2024-02-24T15:59:17+04:00",
            "annotations": {
              "SpecialProperty": "true"
            }
          }
        }
      }
    ],
    "dataSource": {
      "name": "default"
    },
    "entity": "code",
    "catalog": "",
    "title": "Code",
    "description": "Nano code",
    "annotations": {
      "EnableAudit": "true",
      "NormalizedResource": "true",
      "OpenApiGroup": "meta"
    }
  },
  {
    "name": "Namespace",
    "namespace": {
      "name": "system"
    },
    "properties": {
      "auditData": {
        "type": "STRUCT",
        "typeRef": "AuditData",
        "exampleValue": {
          "createdBy": "admin",
          "createdOn": "2024-02-24T16:03:36+04:00",
          "updatedBy": "admin",
          "updatedOn": "2024-02-24T16:03:36+04:00"
        },
        "title": "Audit Data",
        "description": "The audit data of the resource/record. \nIt contains information about who created the resource/record, when it was created, who last updated the resource/record and when it was last updated.",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "description": {
        "type": "STRING",
        "length": 256
      },
      "details": {
        "type": "OBJECT"
      },
      "id": {
        "type": "UUID",
        "primary": true,
        "required": true,
        "immutable": true,
        "exampleValue": "a39621a4-6d48-11ee-b962-0242ac120002",
        "description": "The unique identifier of the resource. It is randomly generated and immutable.",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "name": {
        "type": "STRING",
        "required": true,
        "unique": true,
        "immutable": true,
        "length": 256,
        "annotations": {
          "IsHclLabel": "true"
        }
      },
      "version": {
        "type": "INT32",
        "required": true,
        "defaultValue": 1,
        "exampleValue": 1,
        "title": "Version",
        "description": "The version of the resource/record. It is incremented on every update.",
        "annotations": {
          "AllowEmptyPrimitive": "true",
          "SpecialProperty": "true"
        }
      }
    },
    "types": [
      {
        "name": "AuditData",
        "title": "Audit Data",
        "description": "Audit Data is a type that represents the audit data of a resource/record. ",
        "properties": {
          "createdBy": {
            "type": "STRING",
            "immutable": true,
            "length": 256,
            "exampleValue": "admin",
            "title": "Created By",
            "description": "The user who created the resource/record.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "createdOn": {
            "type": "TIMESTAMP",
            "immutable": true,
            "exampleValue": "2024-02-24T16:03:36+04:00",
            "title": "Created On",
            "description": "The timestamp when the resource/record was created.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "updatedBy": {
            "type": "STRING",
            "length": 256,
            "exampleValue": "admin",
            "title": "Updated By",
            "description": "The user who last updated the resource/record.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "updatedOn": {
            "type": "TIMESTAMP",
            "exampleValue": "2024-02-24T16:03:36+04:00",
            "title": "Updated On",
            "description": "The timestamp when the resource/record was last updated.",
            "annotations": {
              "SpecialProperty": "true"
            }
          }
        }
      }
    ],
    "dataSource": {
      "name": "system"
    },
    "entity": "namespace",
    "catalog": "",
    "annotations": {
      "EnableAudit": "true",
      "OpenApiGroup": "internal"
    }
  },
  {
    "name": "User",
    "namespace": {
      "name": "system"
    },
    "properties": {
      "auditData": {
        "type": "STRUCT",
        "typeRef": "AuditData",
        "exampleValue": {
          "createdBy": "admin",
          "createdOn": "2024-02-24T16:03:36+04:00",
          "updatedBy": "admin",
          "updatedOn": "2024-02-24T16:03:36+04:00"
        },
        "title": "Audit Data",
        "description": "The audit data of the resource/record. \nIt contains information about who created the resource/record, when it was created, who last updated the resource/record and when it was last updated.",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "details": {
        "type": "OBJECT",
        "title": "Details",
        "description": "The details of the user. It is used to store additional information about the user."
      },
      "id": {
        "type": "UUID",
        "primary": true,
        "required": true,
        "immutable": true,
        "exampleValue": "a39621a4-6d48-11ee-b962-0242ac120002",
        "description": "The unique identifier of the resource. It is randomly generated and immutable.",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "password": {
        "type": "STRING",
        "length": 256,
        "title": "Password"
      },
      "permissions": {
        "type": "LIST",
        "item": {
          "type": "REFERENCE",
          "reference": "system/Permission",
          "backReference": "user"
        },
        "title": "Permissions",
        "description": "The permissions of the user. It is used to define the access control rules for resources for users. When you set permissions it is automatically created though Permission Resource. No need to manage it manually"
      },
      "roles": {
        "type": "LIST",
        "item": {
          "type": "REFERENCE",
          "reference": "system/Role"
        },
        "title": "Roles"
      },
      "username": {
        "type": "STRING",
        "required": true,
        "unique": true,
        "length": 256,
        "title": "Username",
        "annotations": {
          "IsHclLabel": "true"
        }
      },
      "version": {
        "type": "INT32",
        "required": true,
        "defaultValue": 1,
        "exampleValue": 1,
        "title": "Version",
        "description": "The version of the resource/record. It is incremented on every update.",
        "annotations": {
          "AllowEmptyPrimitive": "true",
          "SpecialProperty": "true"
        }
      }
    },
    "types": [
      {
        "name": "AuditData",
        "title": "Audit Data",
        "description": "Audit Data is a type that represents the audit data of a resource/record. ",
        "properties": {
          "createdBy": {
            "type": "STRING",
            "immutable": true,
            "length": 256,
            "exampleValue": "admin",
            "title": "Created By",
            "description": "The user who created the resource/record.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "createdOn": {
            "type": "TIMESTAMP",
            "immutable": true,
            "exampleValue": "2024-02-24T16:03:36+04:00",
            "title": "Created On",
            "description": "The timestamp when the resource/record was created.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "updatedBy": {
            "type": "STRING",
            "length": 256,
            "exampleValue": "admin",
            "title": "Updated By",
            "description": "The user who last updated the resource/record.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "updatedOn": {
            "type": "TIMESTAMP",
            "exampleValue": "2024-02-24T16:03:36+04:00",
            "title": "Updated On",
            "description": "The timestamp when the resource/record was last updated.",
            "annotations": {
              "SpecialProperty": "true"
            }
          }
        }
      }
    ],
    "dataSource": {
      "name": "system"
    },
    "entity": "user",
    "catalog": "",
    "title": "User",
    "description": "User is a resource that defines the access control model. It is used to authenticate and authorize users.",
    "annotations": {
      "EnableAudit": "true",
      "OpenApiGroup": "meta"
    }
  },
  {
    "name": "DataSource",
    "namespace": {
      "name": "system"
    },
    "properties": {
      "auditData": {
        "type": "STRUCT",
        "typeRef": "AuditData",
        "exampleValue": {
          "createdBy": "admin",
          "createdOn": "2024-02-24T16:03:36+04:00",
          "updatedBy": "admin",
          "updatedOn": "2024-02-24T16:03:36+04:00"
        },
        "title": "Audit Data",
        "description": "The audit data of the resource/record. \nIt contains information about who created the resource/record, when it was created, who last updated the resource/record and when it was last updated.",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "backend": {
        "type": "ENUM",
        "required": true,
        "enumValues": [
          "POSTGRESQL",
          "MYSQL",
          "MONGODB",
          "REDIS",
          "SQLITE"
        ]
      },
      "description": {
        "type": "STRING",
        "length": 64,
        "annotations": {
          "AllowEmptyPrimitive": "true"
        }
      },
      "id": {
        "type": "UUID",
        "primary": true,
        "required": true,
        "immutable": true,
        "exampleValue": "a39621a4-6d48-11ee-b962-0242ac120002",
        "description": "The unique identifier of the resource. It is randomly generated and immutable.",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "name": {
        "type": "STRING",
        "required": true,
        "unique": true,
        "length": 64,
        "annotations": {
          "IsHclLabel": "true"
        }
      },
      "options": {
        "type": "MAP",
        "required": true,
        "item": {
          "type": "STRING"
        }
      },
      "version": {
        "type": "INT32",
        "required": true,
        "defaultValue": 1,
        "exampleValue": 1,
        "title": "Version",
        "description": "The version of the resource/record. It is incremented on every update.",
        "annotations": {
          "AllowEmptyPrimitive": "true",
          "SpecialProperty": "true"
        }
      }
    },
    "types": [
      {
        "name": "AuditData",
        "title": "Audit Data",
        "description": "Audit Data is a type that represents the audit data of a resource/record. ",
        "properties": {
          "createdBy": {
            "type": "STRING",
            "immutable": true,
            "length": 256,
            "exampleValue": "admin",
            "title": "Created By",
            "description": "The user who created the resource/record.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "createdOn": {
            "type": "TIMESTAMP",
            "immutable": true,
            "exampleValue": "2024-02-24T16:03:36+04:00",
            "title": "Created On",
            "description": "The timestamp when the resource/record was created.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "updatedBy": {
            "type": "STRING",
            "length": 256,
            "exampleValue": "admin",
            "title": "Updated By",
            "description": "The user who last updated the resource/record.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "updatedOn": {
            "type": "TIMESTAMP",
            "exampleValue": "2024-02-24T16:03:36+04:00",
            "title": "Updated On",
            "description": "The timestamp when the resource/record was last updated.",
            "annotations": {
              "SpecialProperty": "true"
            }
          }
        }
      }
    ],
    "dataSource": {
      "name": "system"
    },
    "entity": "data_source",
    "catalog": "",
    "annotations": {
      "EnableAudit": "true",
      "OpenApiGroup": "internal"
    }
  },
  {
    "name": "Extension",
    "namespace": {
      "name": "system"
    },
    "properties": {
      "annotations": {
        "type": "MAP",
        "item": {
          "type": "STRING"
        },
        "exampleValue": {
          "CheckVersion": "true",
          "CommonType": "testType",
          "IgnoreIfExists": "true"
        },
        "title": "Annotations",
        "description": "The annotations of the resource/record. It contains information about the resource/record. For example, it can contain information about the UI representation of the resource/record.",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "auditData": {
        "type": "STRUCT",
        "typeRef": "AuditData",
        "exampleValue": {
          "createdBy": "admin",
          "createdOn": "2024-02-24T16:03:36+04:00",
          "updatedBy": "admin",
          "updatedOn": "2024-02-24T16:03:36+04:00"
        },
        "title": "Audit Data",
        "description": "The audit data of the resource/record. \nIt contains information about who created the resource/record, when it was created, who last updated the resource/record and when it was last updated.",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "call": {
        "type": "STRUCT",
        "typeRef": "ExternalCall",
        "required": true
      },
      "description": {
        "type": "STRING",
        "length": 1024
      },
      "finalizes": {
        "type": "BOOL",
        "required": true
      },
      "id": {
        "type": "UUID",
        "primary": true,
        "required": true,
        "immutable": true,
        "exampleValue": "a39621a4-6d48-11ee-b962-0242ac120002",
        "description": "The unique identifier of the resource. It is randomly generated and immutable.",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "name": {
        "type": "STRING",
        "required": true,
        "unique": true,
        "length": 256,
        "annotations": {
          "IsHclLabel": "true"
        }
      },
      "order": {
        "type": "INT32",
        "required": true
      },
      "responds": {
        "type": "BOOL",
        "required": true
      },
      "selector": {
        "type": "STRUCT",
        "typeRef": "EventSelector"
      },
      "sync": {
        "type": "BOOL",
        "required": true
      },
      "version": {
        "type": "INT32",
        "required": true,
        "defaultValue": 1,
        "exampleValue": 1,
        "title": "Version",
        "description": "The version of the resource/record. It is incremented on every update.",
        "annotations": {
          "AllowEmptyPrimitive": "true",
          "SpecialProperty": "true"
        }
      }
    },
    "types": [
      {
        "name": "BooleanExpression",
        "title": "",
        "description": "",
        "properties": {
          "and": {
            "type": "LIST",
            "item": {
              "type": "STRUCT",
              "typeRef": "BooleanExpression"
            }
          },
          "equal": {
            "type": "STRUCT",
            "typeRef": "PairExpression"
          },
          "greaterThan": {
            "type": "STRUCT",
            "typeRef": "PairExpression"
          },
          "greaterThanOrEqual": {
            "type": "STRUCT",
            "typeRef": "PairExpression"
          },
          "in": {
            "type": "STRUCT",
            "typeRef": "PairExpression"
          },
          "isNull": {
            "type": "STRUCT",
            "typeRef": "Expression"
          },
          "lessThan": {
            "type": "STRUCT",
            "typeRef": "PairExpression"
          },
          "lessThanOrEqual": {
            "type": "STRUCT",
            "typeRef": "PairExpression"
          },
          "not": {
            "type": "STRUCT",
            "typeRef": "BooleanExpression"
          },
          "or": {
            "type": "LIST",
            "item": {
              "type": "STRUCT",
              "typeRef": "BooleanExpression"
            }
          },
          "regexMatch": {
            "type": "STRUCT",
            "typeRef": "RegexMatchExpression"
          }
        }
      },
      {
        "name": "PairExpression",
        "title": "",
        "description": "",
        "properties": {
          "left": {
            "type": "STRUCT",
            "typeRef": "Expression"
          },
          "right": {
            "type": "STRUCT",
            "typeRef": "Expression"
          }
        }
      },
      {
        "name": "RegexMatchExpression",
        "title": "",
        "description": "",
        "properties": {
          "expression": {
            "type": "STRUCT",
            "typeRef": "Expression"
          },
          "pattern": {
            "type": "STRING"
          }
        }
      },
      {
        "name": "Expression",
        "title": "",
        "description": "",
        "properties": {
          "property": {
            "type": "STRING"
          },
          "value": {
            "type": "OBJECT"
          }
        }
      },
      {
        "name": "AuditData",
        "title": "Audit Data",
        "description": "Audit Data is a type that represents the audit data of a resource/record. ",
        "properties": {
          "createdBy": {
            "type": "STRING",
            "immutable": true,
            "length": 256,
            "exampleValue": "admin",
            "title": "Created By",
            "description": "The user who created the resource/record.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "createdOn": {
            "type": "TIMESTAMP",
            "immutable": true,
            "exampleValue": "2024-02-24T16:03:36+04:00",
            "title": "Created On",
            "description": "The timestamp when the resource/record was created.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "updatedBy": {
            "type": "STRING",
            "length": 256,
            "exampleValue": "admin",
            "title": "Updated By",
            "description": "The user who last updated the resource/record.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "updatedOn": {
            "type": "TIMESTAMP",
            "exampleValue": "2024-02-24T16:03:36+04:00",
            "title": "Updated On",
            "description": "The timestamp when the resource/record was last updated.",
            "annotations": {
              "SpecialProperty": "true"
            }
          }
        }
      },
      {
        "name": "FunctionCall",
        "title": "",
        "description": "",
        "properties": {
          "functionName": {
            "type": "STRING",
            "required": true
          },
          "host": {
            "type": "STRING",
            "required": true
          }
        }
      },
      {
        "name": "HttpCall",
        "title": "",
        "description": "",
        "properties": {
          "method": {
            "type": "STRING",
            "required": true
          },
          "uri": {
            "type": "STRING",
            "required": true
          }
        }
      },
      {
        "name": "ChannelCall",
        "title": "",
        "description": "",
        "properties": {
          "channelKey": {
            "type": "STRING",
            "required": true
          }
        }
      },
      {
        "name": "ExternalCall",
        "title": "",
        "description": "",
        "properties": {
          "channelCall": {
            "type": "STRUCT",
            "typeRef": "ChannelCall"
          },
          "functionCall": {
            "type": "STRUCT",
            "typeRef": "FunctionCall"
          },
          "httpCall": {
            "type": "STRUCT",
            "typeRef": "HttpCall"
          }
        }
      },
      {
        "name": "EventSelector",
        "title": "",
        "description": "",
        "properties": {
          "actions": {
            "type": "LIST",
            "item": {
              "type": "ENUM",
              "enumValues": [
                "CREATE",
                "UPDATE",
                "DELETE",
                "GET",
                "LIST",
                "OPERATE"
              ],
              "annotations": {
                "TypeName": "EventAction"
              }
            }
          },
          "annotations": {
            "type": "MAP",
            "item": {
              "type": "STRING"
            },
            "exampleValue": {
              "CheckVersion": "true",
              "CommonType": "testType",
              "IgnoreIfExists": "true"
            },
            "title": "Annotations",
            "description": "The annotations of the resource/record. It contains information about the resource/record. For example, it can contain information about the UI representation of the resource/record.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "ids": {
            "type": "LIST",
            "item": {
              "type": "STRING"
            }
          },
          "namespaces": {
            "type": "LIST",
            "item": {
              "type": "STRING"
            }
          },
          "recordSelector": {
            "type": "STRUCT",
            "typeRef": "BooleanExpression"
          },
          "resources": {
            "type": "LIST",
            "item": {
              "type": "STRING"
            }
          }
        }
      },
      {
        "name": "RecordSearchParams",
        "title": "",
        "description": "",
        "properties": {
          "limit": {
            "type": "INT32"
          },
          "offset": {
            "type": "INT32"
          },
          "query": {
            "type": "STRUCT",
            "typeRef": "BooleanExpression"
          },
          "resolveReferences": {
            "type": "LIST",
            "item": {
              "type": "STRING"
            }
          }
        }
      },
      {
        "name": "Event",
        "title": "",
        "description": "",
        "properties": {
          "action": {
            "type": "ENUM",
            "required": true,
            "enumValues": [
              "CREATE",
              "UPDATE",
              "DELETE",
              "GET",
              "LIST",
              "OPERATE"
            ]
          },
          "actionDescription": {
            "type": "STRING"
          },
          "actionName": {
            "type": "STRING"
          },
          "actionSummary": {
            "type": "STRING"
          },
          "annotations": {
            "type": "MAP",
            "item": {
              "type": "STRING"
            },
            "exampleValue": {
              "CheckVersion": "true",
              "CommonType": "testType",
              "IgnoreIfExists": "true"
            },
            "title": "Annotations",
            "description": "The annotations of the resource/record. It contains information about the resource/record. For example, it can contain information about the UI representation of the resource/record.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "error": {
            "type": "STRUCT",
            "typeRef": "Error"
          },
          "finalizes": {
            "type": "BOOL"
          },
          "id": {
            "type": "STRING",
            "required": true,
            "immutable": true
          },
          "input": {
            "type": "OBJECT"
          },
          "output": {
            "type": "OBJECT"
          },
          "recordSearchParams": {
            "type": "STRUCT",
            "typeRef": "RecordSearchParams"
          },
          "records": {
            "type": "LIST",
            "item": {
              "type": "REFERENCE",
              "reference": "system/Record"
            }
          },
          "resource": {
            "type": "REFERENCE",
            "reference": "system/Resource"
          },
          "sync": {
            "type": "BOOL"
          },
          "time": {
            "type": "TIMESTAMP"
          },
          "total": {
            "type": "INT64"
          }
        }
      },
      {
        "name": "ErrorField",
        "title": "",
        "description": "",
        "properties": {
          "message": {
            "type": "STRING"
          },
          "property": {
            "type": "STRING"
          },
          "recordId": {
            "type": "STRING"
          },
          "value": {
            "type": "OBJECT"
          }
        }
      },
      {
        "name": "Error",
        "title": "",
        "description": "",
        "properties": {
          "code": {
            "type": "ENUM",
            "enumValues": [
              "UNKNOWN_ERROR",
              "RECORD_NOT_FOUND",
              "UNABLE_TO_LOCATE_PRIMARY_KEY",
              "INTERNAL_ERROR",
              "PROPERTY_NOT_FOUND",
              "RECORD_VALIDATION_ERROR",
              "RESOURCE_VALIDATION_ERROR",
              "AUTHENTICATION_FAILED",
              "ALREADY_EXISTS",
              "ACCESS_DENIED",
              "BACKEND_ERROR",
              "UNIQUE_VIOLATION",
              "REFERENCE_VIOLATION",
              "RESOURCE_NOT_FOUND",
              "UNSUPPORTED_OPERATION",
              "EXTERNAL_BACKEND_COMMUNICATION_ERROR",
              "EXTERNAL_BACKEND_ERROR",
              "RATE_LIMIT_ERROR"
            ]
          },
          "fields": {
            "type": "LIST",
            "item": {
              "type": "STRUCT",
              "typeRef": "ErrorField"
            }
          },
          "message": {
            "type": "STRING"
          }
        }
      }
    ],
    "dataSource": {
      "name": "system"
    },
    "entity": "extension",
    "catalog": "",
    "annotations": {
      "EnableAudit": "true",
      "OpenApiGroup": "internal"
    }
  },
  {
    "name": "Resource",
    "namespace": {
      "name": "system"
    },
    "properties": {
      "annotations": {
        "type": "MAP",
        "item": {
          "type": "STRING"
        },
        "exampleValue": {
          "CheckVersion": "true",
          "CommonType": "testType",
          "IgnoreIfExists": "true"
        },
        "title": "Annotations",
        "description": "The annotations of the resource/record. It contains information about the resource/record. For example, it can contain information about the UI representation of the resource/record.",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "auditData": {
        "type": "STRUCT",
        "typeRef": "AuditData",
        "exampleValue": {
          "createdBy": "admin",
          "createdOn": "2024-02-24T16:03:36+04:00",
          "updatedBy": "admin",
          "updatedOn": "2024-02-24T16:03:36+04:00"
        },
        "title": "Audit Data",
        "description": "The audit data of the resource/record. \nIt contains information about who created the resource/record, when it was created, who last updated the resource/record and when it was last updated.",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "catalog": {
        "type": "STRING",
        "length": 256,
        "exampleValue": "public",
        "title": "Catalog",
        "description": "This property indicates the catalog of the resource. By catalog, schema name is considered for relational databases."
      },
      "checkReferences": {
        "type": "BOOL",
        "required": true,
        "defaultValue": false,
        "title": "Check References",
        "description": "This property indicates that whether or not check references is enabled. Check references resources are used to check references to other resources. It is acting if enabled only in create/update operations"
      },
      "dataSource": {
        "type": "REFERENCE",
        "reference": "system/DataSource",
        "title": "Data Source",
        "description": "This property indicates the data source of the resource.\nData source is used to store the records of the resource.\nEach resource can have only one data source. But data source can be different from resource to resource.\nUpdating data source of a resource is not migrating any data.\nDataSource property is used for non-virtual resources.\nIf DataSource is not provided, default DataSource will be used\n"
      },
      "description": {
        "type": "STRING",
        "length": 256,
        "exampleValue": "Book is a resource in the system. It represents a book in the system.",
        "title": "Description",
        "description": "This property indicates the description of the resource. It is used to have meaningful description for the resources."
      },
      "entity": {
        "type": "STRING",
        "length": 256,
        "exampleValue": "book",
        "title": "Entity",
        "description": "This property indicates the entity of the resource. By entity, table name is considered for relational databases"
      },
      "id": {
        "type": "UUID",
        "primary": true,
        "required": true,
        "immutable": true,
        "exampleValue": "a39621a4-6d48-11ee-b962-0242ac120002",
        "description": "The unique identifier of the resource. It is randomly generated and immutable.",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "immutable": {
        "type": "BOOL",
        "required": true,
        "defaultValue": false,
        "title": "Immutable",
        "description": "This property indicates that whether or not given resource is immutable. Immutable resources can not be updated or deleted."
      },
      "indexes": {
        "type": "LIST",
        "item": {
          "type": "STRUCT",
          "typeRef": "Index"
        },
        "title": "Indexes",
        "description": "This property indicates the indexes of the resource.\nIndexes are used to speed up the queries. Indexes are used to define complex unique constraints.\n"
      },
      "name": {
        "type": "STRING",
        "required": true,
        "length": 256,
        "exampleValue": "Book",
        "title": "Name",
        "description": "The name of the resource. Name is the main parameter of resource, it is used to identify the resource. It is also used to name API endpoints.",
        "annotations": {
          "IsHclLabel": "true"
        }
      },
      "namespace": {
        "type": "REFERENCE",
        "required": true,
        "reference": "system/Namespace",
        "defaultValue": {
          "name": "default"
        },
        "exampleValue": {
          "name": "default"
        },
        "title": "Namespace",
        "description": "The namespace of the resource. Namespace is used to group resources. It is also used to name API endpoints together with Resource. "
      },
      "properties": {
        "type": "MAP",
        "required": true,
        "item": {
          "type": "STRUCT",
          "typeRef": "Property"
        },
        "exampleValue": [
          {
            "name": "title",
            "type": "name"
          },
          {
            "name": "type",
            "type": "STRING"
          }
        ],
        "title": "Properties",
        "description": "This property indicates the properties of the resource."
      },
      "title": {
        "type": "STRING",
        "length": 256,
        "exampleValue": "Book",
        "title": "Title",
        "description": "This property indicates the title of the resource. It is used to have meaningful names for the resources."
      },
      "types": {
        "type": "LIST",
        "item": {
          "type": "STRUCT",
          "typeRef": "SubType"
        },
        "title": "Types",
        "description": "This property indicates the types of the resource.\nThis is used to hav sub types, which will be used by other properties which has type STRUCT.\n"
      },
      "version": {
        "type": "INT32",
        "required": true,
        "defaultValue": 1,
        "exampleValue": 1,
        "title": "Version",
        "description": "The version of the resource/record. It is incremented on every update.",
        "annotations": {
          "AllowEmptyPrimitive": "true",
          "SpecialProperty": "true"
        }
      },
      "virtual": {
        "type": "BOOL",
        "required": true,
        "defaultValue": false,
        "title": "Virtual",
        "description": "This property indicates that whether or not given resource is virtual. \nVirtual resources are not stored in database. They are created on the fly.\nVirtual resources are used to prepare bind them to extensions or nano codes, etc. without touching to database.\n"
      }
    },
    "indexes": [
      {
        "properties": [
          {
            "name": "namespace",
            "order": "UNKNOWN"
          },
          {
            "name": "name",
            "order": "UNKNOWN"
          }
        ],
        "unique": true
      }
    ],
    "types": [
      {
        "name": "Property",
        "title": "Property",
        "description": "Property is a type that represents a property of a resource. It is like an API properties or properties of class in a programming language",
        "properties": {
          "annotations": {
            "type": "MAP",
            "item": {
              "type": "STRING"
            },
            "exampleValue": {
              "CheckVersion": "true",
              "CommonType": "testType",
              "IgnoreIfExists": "true"
            },
            "title": "Annotations",
            "description": "The annotations of the resource/record. It contains information about the resource/record. For example, it can contain information about the UI representation of the resource/record.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "backReference": {
            "type": "STRING",
            "exampleValue": "Book",
            "title": "Back Reference",
            "description": "This property is to indicate the back reference property of the property. It is only used for REFERENCE type."
          },
          "defaultValue": {
            "type": "OBJECT",
            "exampleValue": "Lord of the Rings",
            "title": "Default Value",
            "description": "This property indicates the default value of the property. \nIt is used when creating/updating records and property is not provided.\n"
          },
          "description": {
            "type": "STRING",
            "length": 256,
            "exampleValue": "Book Title is a property of Book Resource. It represents the title of the book.",
            "title": "Description",
            "description": "This property indicates the description of the property. It is used to have meaningful description for the properties."
          },
          "enumValues": {
            "type": "LIST",
            "item": {
              "type": "STRING"
            },
            "exampleValue": [
              "UNKNOWN",
              "ASC",
              "DESC"
            ],
            "title": "Enum Values",
            "description": "This property is only used with ENUM type. This property indicates the enum values of the property."
          },
          "exampleValue": {
            "type": "OBJECT",
            "exampleValue": "no-book-name",
            "title": "Example Value",
            "description": "This property indicates the example value of the property."
          },
          "immutable": {
            "type": "BOOL",
            "required": true,
            "defaultValue": false,
            "title": "Immutable",
            "description": "This property indicates that whether or not given property is immutable. Immutable properties can not be updated."
          },
          "item": {
            "type": "STRUCT",
            "typeRef": "Property",
            "exampleValue": {
              "type": "STRING"
            },
            "title": "Item",
            "description": "This property indicates the item type of the property. It is only used for LIST and MAP types."
          },
          "length": {
            "type": "INT32",
            "required": true,
            "defaultValue": 256,
            "exampleValue": 256,
            "title": "Length",
            "description": "This property indicates the length of the property. It is only used for STRING type."
          },
          "primary": {
            "type": "BOOL",
            "required": true,
            "defaultValue": false,
            "title": "Primary",
            "description": "The primary property of the resource. It is used to identify the resource. When it is not supplied, an id property is automatically created.\nNormally primary property should not be provided. It is only used for special cases. If provided, it can break some functionalities of system. \nIf Primary is provided, it should be a single property. It can not be a list or map.\nIf Primary is provided, internal id property will not be created.\n"
          },
          "reference": {
            "type": "STRING",
            "exampleValue": "Book",
            "title": "Reference",
            "description": "This property indicates the reference type of the property. It is only used for REFERENCE type.\nWhen you use REFERENCE type, you need to provide reference details.\nReference details is used to locate referenced resource\nWhen providing reference details, you need to provide namespace and resource name of the referenced resource.\nIf you don't provide namespace, it will be assumed as the same namespace with the resource.\n"
          },
          "required": {
            "type": "BOOL",
            "required": true,
            "defaultValue": false,
            "title": "Required",
            "description": "This property indicates that whether or not given property is required.\nWhen creating/updating records, if required property is not and defaultValue is given in property, the system will allow request but will use default value instead.\n(In all cases if default value is provided it will be used in case of property absence)\n"
          },
          "title": {
            "type": "STRING",
            "length": 256,
            "exampleValue": "Book Title",
            "title": "Title",
            "description": "This property indicates the title of the property. It is used to have meaningful names for the properties."
          },
          "type": {
            "type": "ENUM",
            "required": true,
            "enumValues": [
              "BOOL",
              "STRING",
              "FLOAT32",
              "FLOAT64",
              "INT32",
              "INT64",
              "BYTES",
              "UUID",
              "DATE",
              "TIME",
              "TIMESTAMP",
              "OBJECT",
              "MAP",
              "LIST",
              "REFERENCE",
              "ENUM",
              "STRUCT"
            ],
            "exampleValue": "STRING",
            "title": "Type",
            "description": "The type of the property. Property Data Types can be one of it. Types can be written with all capital letters."
          },
          "typeRef": {
            "type": "STRING",
            "length": 256,
            "exampleValue": "BookPublishingDetails",
            "title": "Type Reference",
            "description": "The type reference of the property. It is only used for STRUCT type. \nWhen you used STRUCT type, you need to define your type inside types of resource and then you can use its name as typeRef."
          },
          "unique": {
            "type": "BOOL",
            "required": true,
            "defaultValue": false,
            "title": "Unique",
            "description": "This property indicates that whether or not given property is unique.\nUnique property is only working for single property, for combination of properties to become unique, you can use indexes with unique flag \n"
          }
        }
      },
      {
        "name": "SubType",
        "title": "Sub Type",
        "description": "Sub Type is a type that represents a sub type of a resource. It is mostly used by STRUCT type to define the properties of the struct. ",
        "properties": {
          "description": {
            "type": "STRING",
            "length": 256,
            "exampleValue": "Book is a sub type of Resource. It represents a book in the system. ",
            "title": "Description",
            "description": "The description of the sub type. It is used to have meaningful description for the sub types. "
          },
          "name": {
            "type": "STRING",
            "required": true,
            "exampleValue": "Book",
            "title": "Name",
            "description": "The name of the sub type. "
          },
          "properties": {
            "type": "MAP",
            "required": true,
            "item": {
              "type": "STRUCT",
              "typeRef": "Property"
            },
            "exampleValue": [
              {
                "name": "title",
                "type": "STRING"
              }
            ],
            "title": "Properties",
            "description": "The properties of the sub type. It is used to define the properties of the sub type. "
          },
          "title": {
            "type": "STRING",
            "length": 256,
            "exampleValue": "Book",
            "title": "Title",
            "description": "The title of the sub type. It is used to have meaningful names for the sub types."
          }
        }
      },
      {
        "name": "AuditData",
        "title": "Audit Data",
        "description": "Audit Data is a type that represents the audit data of a resource/record. ",
        "properties": {
          "createdBy": {
            "type": "STRING",
            "immutable": true,
            "length": 256,
            "exampleValue": "admin",
            "title": "Created By",
            "description": "The user who created the resource/record.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "createdOn": {
            "type": "TIMESTAMP",
            "immutable": true,
            "exampleValue": "2024-02-24T16:03:36+04:00",
            "title": "Created On",
            "description": "The timestamp when the resource/record was created.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "updatedBy": {
            "type": "STRING",
            "length": 256,
            "exampleValue": "admin",
            "title": "Updated By",
            "description": "The user who last updated the resource/record.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "updatedOn": {
            "type": "TIMESTAMP",
            "exampleValue": "2024-02-24T16:03:36+04:00",
            "title": "Updated On",
            "description": "The timestamp when the resource/record was last updated.",
            "annotations": {
              "SpecialProperty": "true"
            }
          }
        }
      },
      {
        "name": "IndexProperty",
        "title": "",
        "description": "",
        "properties": {
          "name": {
            "type": "STRING",
            "required": true
          },
          "order": {
            "type": "ENUM",
            "defaultValue": "ASC",
            "enumValues": [
              "UNKNOWN",
              "ASC",
              "DESC"
            ]
          }
        }
      },
      {
        "name": "Index",
        "title": "",
        "description": "",
        "properties": {
          "annotations": {
            "type": "MAP",
            "item": {
              "type": "STRING"
            },
            "exampleValue": {
              "CheckVersion": "true",
              "CommonType": "testType",
              "IgnoreIfExists": "true"
            },
            "title": "Annotations",
            "description": "The annotations of the resource/record. It contains information about the resource/record. For example, it can contain information about the UI representation of the resource/record.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "indexType": {
            "type": "ENUM",
            "defaultValue": "BTREE",
            "enumValues": [
              "BTREE",
              "HASH"
            ]
          },
          "properties": {
            "type": "LIST",
            "item": {
              "type": "STRUCT",
              "typeRef": "IndexProperty"
            }
          },
          "unique": {
            "type": "BOOL"
          }
        }
      }
    ],
    "dataSource": {
      "name": "system"
    },
    "entity": "resource",
    "catalog": "",
    "title": "Resource",
    "description": "Resource is a top level resource that represents a model and API in the system",
    "annotations": {
      "EnableAudit": "true",
      "OpenApiGroup": "meta",
      "OpenApiRestPath": "resources",
      "RestApiDisabled": "true"
    }
  },
  {
    "name": "Role",
    "namespace": {
      "name": "system"
    },
    "properties": {
      "auditData": {
        "type": "STRUCT",
        "typeRef": "AuditData",
        "exampleValue": {
          "createdBy": "admin",
          "createdOn": "2024-02-24T16:03:36+04:00",
          "updatedBy": "admin",
          "updatedOn": "2024-02-24T16:03:36+04:00"
        },
        "title": "Audit Data",
        "description": "The audit data of the resource/record. \nIt contains information about who created the resource/record, when it was created, who last updated the resource/record and when it was last updated.",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "details": {
        "type": "OBJECT",
        "title": "Details",
        "description": "The details of the user. It is used to store additional information about the user."
      },
      "id": {
        "type": "UUID",
        "primary": true,
        "required": true,
        "immutable": true,
        "exampleValue": "a39621a4-6d48-11ee-b962-0242ac120002",
        "description": "The unique identifier of the resource. It is randomly generated and immutable.",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "name": {
        "type": "STRING",
        "required": true,
        "unique": true,
        "length": 256,
        "title": "Name",
        "description": "The name of the role",
        "annotations": {
          "IsHclLabel": "true"
        }
      },
      "permissions": {
        "type": "LIST",
        "item": {
          "type": "REFERENCE",
          "reference": "system/Permission",
          "backReference": "role"
        },
        "description": "The permissions of the role. It is used to define the access control rules for resources for roles. When you set permissions it is automatically created though Permission Resource. No need to manage it manually"
      },
      "version": {
        "type": "INT32",
        "required": true,
        "defaultValue": 1,
        "exampleValue": 1,
        "title": "Version",
        "description": "The version of the resource/record. It is incremented on every update.",
        "annotations": {
          "AllowEmptyPrimitive": "true",
          "SpecialProperty": "true"
        }
      }
    },
    "types": [
      {
        "name": "AuditData",
        "title": "Audit Data",
        "description": "Audit Data is a type that represents the audit data of a resource/record. ",
        "properties": {
          "createdBy": {
            "type": "STRING",
            "immutable": true,
            "length": 256,
            "exampleValue": "admin",
            "title": "Created By",
            "description": "The user who created the resource/record.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "createdOn": {
            "type": "TIMESTAMP",
            "immutable": true,
            "exampleValue": "2024-02-24T16:03:36+04:00",
            "title": "Created On",
            "description": "The timestamp when the resource/record was created.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "updatedBy": {
            "type": "STRING",
            "length": 256,
            "exampleValue": "admin",
            "title": "Updated By",
            "description": "The user who last updated the resource/record.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "updatedOn": {
            "type": "TIMESTAMP",
            "exampleValue": "2024-02-24T16:03:36+04:00",
            "title": "Updated On",
            "description": "The timestamp when the resource/record was last updated.",
            "annotations": {
              "SpecialProperty": "true"
            }
          }
        }
      }
    ],
    "dataSource": {
      "name": "system"
    },
    "entity": "role",
    "catalog": "",
    "title": "Role",
    "description": "Role is a resource that defines the access control model. It is used to give permissions to users in a grouped way",
    "annotations": {
      "EnableAudit": "true",
      "OpenApiGroup": "meta"
    }
  },
  {
    "name": "Permission",
    "namespace": {
      "name": "system"
    },
    "properties": {
      "after": {
        "type": "TIMESTAMP",
        "title": "After",
        "description": "The timestamp after which the permission is valid. If given it will be used to match the timestamp of the request."
      },
      "auditData": {
        "type": "STRUCT",
        "typeRef": "AuditData",
        "exampleValue": {
          "createdBy": "admin",
          "createdOn": "2024-02-24T16:03:36+04:00",
          "updatedBy": "admin",
          "updatedOn": "2024-02-24T16:03:36+04:00"
        },
        "title": "Audit Data",
        "description": "The audit data of the resource/record. \nIt contains information about who created the resource/record, when it was created, who last updated the resource/record and when it was last updated.",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "before": {
        "type": "TIMESTAMP",
        "title": "Before",
        "description": "The timestamp before which the permission is valid. If given it will be used to match the timestamp of the request."
      },
      "id": {
        "type": "UUID",
        "primary": true,
        "required": true,
        "immutable": true,
        "exampleValue": "a39621a4-6d48-11ee-b962-0242ac120002",
        "description": "The unique identifier of the resource. It is randomly generated and immutable.",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "localFlags": {
        "type": "OBJECT"
      },
      "namespace": {
        "type": "STRING",
        "length": 255,
        "exampleValue": "default",
        "title": "Namespace",
        "description": "The namespace(name) of the resource. If given it will be used to match the resource by namespace."
      },
      "operation": {
        "type": "ENUM",
        "required": true,
        "length": 255,
        "defaultValue": "FULL",
        "enumValues": [
          "READ",
          "CREATE",
          "UPDATE",
          "DELETE",
          "FULL"
        ],
        "exampleValue": "READ",
        "title": "Operation",
        "description": "The operation of the permission. It is used to match the operation of the request. If given it will be used to match the operation of the request."
      },
      "permit": {
        "type": "ENUM",
        "required": true,
        "length": 255,
        "enumValues": [
          "ALLOW",
          "REJECT"
        ],
        "title": "Permit",
        "description": "The permit of the permission. If permission is matched, this property is judging field to indicate that if operation is allowed or not"
      },
      "recordSelector": {
        "type": "STRUCT",
        "typeRef": "BooleanExpression"
      },
      "resource": {
        "type": "STRING",
        "length": 255,
        "exampleValue": "Book",
        "title": "Resource",
        "description": "The name of the resource. If given it will be used to match the resource by name."
      },
      "role": {
        "type": "REFERENCE",
        "reference": "system/Role",
        "title": "Role",
        "description": "The role who has the permission. If given it will be used to match the role of the request. It is ignored by default, because if permissions is set through Role this property is overrides and auto-populated by system"
      },
      "user": {
        "type": "REFERENCE",
        "reference": "system/User",
        "title": "User",
        "description": "The user who has the permission. If given it will be used to match the user of the request. It is ignored by default, because if permissions is set through User this property is overrides and auto-populated by system"
      },
      "version": {
        "type": "INT32",
        "required": true,
        "defaultValue": 1,
        "exampleValue": 1,
        "title": "Version",
        "description": "The version of the resource/record. It is incremented on every update.",
        "annotations": {
          "AllowEmptyPrimitive": "true",
          "SpecialProperty": "true"
        }
      }
    },
    "types": [
      {
        "name": "AuditData",
        "title": "Audit Data",
        "description": "Audit Data is a type that represents the audit data of a resource/record. ",
        "properties": {
          "createdBy": {
            "type": "STRING",
            "immutable": true,
            "length": 256,
            "exampleValue": "admin",
            "title": "Created By",
            "description": "The user who created the resource/record.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "createdOn": {
            "type": "TIMESTAMP",
            "immutable": true,
            "exampleValue": "2024-02-24T16:03:36+04:00",
            "title": "Created On",
            "description": "The timestamp when the resource/record was created.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "updatedBy": {
            "type": "STRING",
            "length": 256,
            "exampleValue": "admin",
            "title": "Updated By",
            "description": "The user who last updated the resource/record.",
            "annotations": {
              "SpecialProperty": "true"
            }
          },
          "updatedOn": {
            "type": "TIMESTAMP",
            "exampleValue": "2024-02-24T16:03:36+04:00",
            "title": "Updated On",
            "description": "The timestamp when the resource/record was last updated.",
            "annotations": {
              "SpecialProperty": "true"
            }
          }
        }
      },
      {
        "name": "BooleanExpression",
        "title": "",
        "description": "",
        "properties": {
          "and": {
            "type": "LIST",
            "item": {
              "type": "STRUCT",
              "typeRef": "BooleanExpression"
            }
          },
          "equal": {
            "type": "STRUCT",
            "typeRef": "PairExpression"
          },
          "greaterThan": {
            "type": "STRUCT",
            "typeRef": "PairExpression"
          },
          "greaterThanOrEqual": {
            "type": "STRUCT",
            "typeRef": "PairExpression"
          },
          "in": {
            "type": "STRUCT",
            "typeRef": "PairExpression"
          },
          "isNull": {
            "type": "STRUCT",
            "typeRef": "Expression"
          },
          "lessThan": {
            "type": "STRUCT",
            "typeRef": "PairExpression"
          },
          "lessThanOrEqual": {
            "type": "STRUCT",
            "typeRef": "PairExpression"
          },
          "not": {
            "type": "STRUCT",
            "typeRef": "BooleanExpression"
          },
          "or": {
            "type": "LIST",
            "item": {
              "type": "STRUCT",
              "typeRef": "BooleanExpression"
            }
          },
          "regexMatch": {
            "type": "STRUCT",
            "typeRef": "RegexMatchExpression"
          }
        }
      },
      {
        "name": "PairExpression",
        "title": "",
        "description": "",
        "properties": {
          "left": {
            "type": "STRUCT",
            "typeRef": "Expression"
          },
          "right": {
            "type": "STRUCT",
            "typeRef": "Expression"
          }
        }
      },
      {
        "name": "RegexMatchExpression",
        "title": "",
        "description": "",
        "properties": {
          "expression": {
            "type": "STRUCT",
            "typeRef": "Expression"
          },
          "pattern": {
            "type": "STRING"
          }
        }
      },
      {
        "name": "Expression",
        "title": "",
        "description": "",
        "properties": {
          "property": {
            "type": "STRING"
          },
          "value": {
            "type": "OBJECT"
          }
        }
      }
    ],
    "dataSource": {
      "name": "system"
    },
    "entity": "permission",
    "catalog": "",
    "title": "Permission",
    "description": "Permission is a resource that defines the access control rules for resources for users.",
    "annotations": {
      "EnableAudit": "true",
      "OpenApiGroup": "meta"
    }
  },
  {
    "name": "Record",
    "namespace": {
      "name": "system"
    },
    "virtual": true,
    "properties": {
      "id": {
        "type": "UUID",
        "primary": true,
        "required": true,
        "immutable": true,
        "exampleValue": "a39621a4-6d48-11ee-b962-0242ac120002",
        "description": "The unique identifier of the resource. It is randomly generated and immutable.",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "packedProperties": {
        "type": "LIST",
        "item": {
          "type": "OBJECT"
        },
        "annotations": {
          "OpenApiHide": "true"
        }
      },
      "properties": {
        "type": "OBJECT",
        "required": true,
        "title": "Properties",
        "description": "The properties of the record. The schema of properties are defined in the resource definition. \nHere you will put the payload corresponding to the resource definition.\n"
      }
    },
    "title": "Generic Record",
    "description": "A generic record resource. All Apis are extended from Generic Record resource",
    "annotations": {
      "RestApiDisabled": "true"
    }
  },
  {
    "name": "AuditLog",
    "namespace": {
      "name": "system"
    },
    "properties": {
      "annotations": {
        "type": "MAP",
        "item": {
          "type": "STRING"
        },
        "exampleValue": {
          "CheckVersion": "true",
          "CommonType": "testType",
          "IgnoreIfExists": "true"
        },
        "title": "Annotations",
        "description": "The annotations of the resource/record. It contains information about the resource/record. For example, it can contain information about the UI representation of the resource/record.",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "id": {
        "type": "UUID",
        "primary": true,
        "required": true,
        "immutable": true,
        "exampleValue": "a39621a4-6d48-11ee-b962-0242ac120002",
        "description": "The unique identifier of the resource. It is randomly generated and immutable.",
        "annotations": {
          "SpecialProperty": "true"
        }
      },
      "namespace": {
        "type": "STRING",
        "required": true,
        "length": 256
      },
      "operation": {
        "type": "ENUM",
        "required": true,
        "enumValues": [
          "CREATE",
          "UPDATE",
          "DELETE"
        ]
      },
      "properties": {
        "type": "OBJECT"
      },
      "recordId": {
        "type": "STRING",
        "required": true,
        "length": 256,
        "annotations": {
          "SourceDef": "record_id"
        }
      },
      "resource": {
        "type": "STRING",
        "required": true,
        "length": 256
      },
      "time": {
        "type": "TIMESTAMP",
        "required": true
      },
      "username": {
        "type": "STRING",
        "required": true
      },
      "version": {
        "type": "INT32",
        "required": true,
        "defaultValue": 1,
        "exampleValue": 1,
        "title": "Version",
        "description": "The version of the resource/record. It is incremented on every update.",
        "annotations": {
          "AllowEmptyPrimitive": "true",
          "SpecialProperty": "true"
        }
      }
    },
    "immutable": true,
    "dataSource": {
      "name": "system"
    },
    "entity": "audit_log",
    "catalog": "",
    "annotations": {
      "BypassExtensions": "true",
      "OpenApiGroup": "internal"
    }
  }
]
{
  "components": {
    "schemas": {
      "AuthenticationRequest": {
        "properties": {
          "password": {
            "example": "admin",
            "type": "string"
          },
          "term": {
            "$ref": "#/components/schemas/TokenTerm"
          },
          "username": {
            "example": "admin",
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "AuthenticationResponse": {
        "properties": {
          "token": {
            "$ref": "#/components/schemas/Token"
          }
        },
        "required": [
          "token"
        ]
      },
      "BooleanExpression": {
        "type": "object"
      },
      "Error": {
        "properties": {
          "code": {
            "type": "string"
          },
          "details": {
            "type": "object"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "RefreshTokenRequest": {
        "properties": {
          "term": {
            "$ref": "#/components/schemas/TokenTerm"
          },
          "token": {
            "example": "admin",
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "RefreshTokenResponse": {
        "properties": {
          "token": {
            "$ref": "#/components/schemas/Token"
          }
        },
        "required": [
          "token"
        ]
      },
      "SearchRecordRequest": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "limit": {
            "type": "integer"
          },
          "offset": {
            "type": "integer"
          },
          "query": {
            "$ref": "#/components/schemas/BooleanExpression"
          },
          "resolveReferences": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "useHistory": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SystemAuditLog": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string",
              "x-type": "STRING"
            },
            "example": {
              "CheckVersion": "true",
              "CommonType": "testType",
              "IgnoreIfExists": "true"
            },
            "type": "object",
            "x-SpecialProperty": "true",
            "x-item": 1,
            "x-type": "MAP"
          },
          "id": {
            "example": "a39621a4-6d48-11ee-b962-0242ac120002",
            "format": "uuid",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "UUID"
          },
          "namespace": {
            "type": "string",
            "x-type": "STRING"
          },
          "operation": {
            "type": "string",
            "x-type": "ENUM"
          },
          "properties": {
            "type": "object",
            "x-type": "OBJECT"
          },
          "recordId": {
            "type": "string",
            "x-SourceDef": "record_id",
            "x-type": "STRING"
          },
          "resource": {
            "type": "string",
            "x-type": "STRING"
          },
          "time": {
            "format": "datetime",
            "type": "string",
            "x-type": "TIMESTAMP"
          },
          "username": {
            "type": "string",
            "x-type": "STRING"
          },
          "version": {
            "default": 1,
            "example": 1,
            "format": "int32",
            "type": "number",
            "x-AllowEmptyPrimitive": "true",
            "x-SpecialProperty": "true",
            "x-type": "INT32"
          }
        },
        "required": [
          "id",
          "version",
          "namespace",
          "resource",
          "recordId",
          "time",
          "username",
          "operation"
        ],
        "type": "object",
        "x-resource": "AuditLog"
      },
      "SystemDataSource": {
        "properties": {
          "auditData": {
            "$ref": "#/components/schemas/SystemDataSourceAuditData"
          },
          "backend": {
            "type": "string",
            "x-type": "ENUM"
          },
          "description": {
            "type": "string",
            "x-AllowEmptyPrimitive": "true",
            "x-type": "STRING"
          },
          "id": {
            "example": "a39621a4-6d48-11ee-b962-0242ac120002",
            "format": "uuid",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "UUID"
          },
          "name": {
            "type": "string",
            "uniqueItems": true,
            "x-IsHclLabel": "true",
            "x-type": "STRING"
          },
          "options": {
            "additionalProperties": {
              "type": "string",
              "x-type": "STRING"
            },
            "type": "object",
            "x-item": 1,
            "x-type": "MAP"
          },
          "version": {
            "default": 1,
            "example": 1,
            "format": "int32",
            "type": "number",
            "x-AllowEmptyPrimitive": "true",
            "x-SpecialProperty": "true",
            "x-type": "INT32"
          }
        },
        "required": [
          "id",
          "version",
          "name",
          "backend",
          "options"
        ],
        "type": "object",
        "x-resource": "DataSource"
      },
      "SystemDataSourceAuditData": {
        "description": "Audit Data is a type that represents the audit data of a resource/record. ",
        "properties": {
          "createdBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "STRING"
          },
          "createdOn": {
            "example": "2024-02-17T21:08:41+03:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "TIMESTAMP"
          },
          "updatedBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "STRING"
          },
          "updatedOn": {
            "example": "2024-02-17T21:08:41+03:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "TIMESTAMP"
          }
        },
        "title": "Audit Data",
        "type": "object",
        "x-resource": "DataSource"
      },
      "SystemExtension": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string",
              "x-type": "STRING"
            },
            "example": {
              "CheckVersion": "true",
              "CommonType": "testType",
              "IgnoreIfExists": "true"
            },
            "type": "object",
            "x-SpecialProperty": "true",
            "x-item": 1,
            "x-type": "MAP"
          },
          "auditData": {
            "$ref": "#/components/schemas/SystemExtensionAuditData"
          },
          "call": {
            "$ref": "#/components/schemas/SystemExtensionExternalCall"
          },
          "description": {
            "type": "string",
            "x-type": "STRING"
          },
          "finalizes": {
            "type": "boolean",
            "x-type": "BOOL"
          },
          "id": {
            "example": "a39621a4-6d48-11ee-b962-0242ac120002",
            "format": "uuid",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "UUID"
          },
          "name": {
            "type": "string",
            "uniqueItems": true,
            "x-IsHclLabel": "true",
            "x-type": "STRING"
          },
          "order": {
            "format": "int32",
            "type": "number",
            "x-type": "INT32"
          },
          "responds": {
            "type": "boolean",
            "x-type": "BOOL"
          },
          "selector": {
            "$ref": "#/components/schemas/SystemExtensionEventSelector"
          },
          "sync": {
            "type": "boolean",
            "x-type": "BOOL"
          },
          "version": {
            "default": 1,
            "example": 1,
            "format": "int32",
            "type": "number",
            "x-AllowEmptyPrimitive": "true",
            "x-SpecialProperty": "true",
            "x-type": "INT32"
          }
        },
        "required": [
          "id",
          "version",
          "name",
          "order",
          "finalizes",
          "sync",
          "responds",
          "call"
        ],
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionAuditData": {
        "description": "Audit Data is a type that represents the audit data of a resource/record. ",
        "properties": {
          "createdBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "STRING"
          },
          "createdOn": {
            "example": "2024-02-17T21:08:41+03:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "TIMESTAMP"
          },
          "updatedBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "STRING"
          },
          "updatedOn": {
            "example": "2024-02-17T21:08:41+03:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "TIMESTAMP"
          }
        },
        "title": "Audit Data",
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionBooleanExpression": {
        "properties": {
          "and": {
            "items": {
              "$ref": "#/components/schemas/SystemExtensionBooleanExpression"
            },
            "type": "array",
            "x-item": 17,
            "x-type": "LIST"
          },
          "equal": {
            "$ref": "#/components/schemas/SystemExtensionPairExpression"
          },
          "greaterThan": {
            "$ref": "#/components/schemas/SystemExtensionPairExpression"
          },
          "greaterThanOrEqual": {
            "$ref": "#/components/schemas/SystemExtensionPairExpression"
          },
          "in": {
            "$ref": "#/components/schemas/SystemExtensionPairExpression"
          },
          "isNull": {
            "$ref": "#/components/schemas/SystemExtensionExpression"
          },
          "lessThan": {
            "$ref": "#/components/schemas/SystemExtensionPairExpression"
          },
          "lessThanOrEqual": {
            "$ref": "#/components/schemas/SystemExtensionPairExpression"
          },
          "not": {
            "$ref": "#/components/schemas/SystemExtensionBooleanExpression"
          },
          "or": {
            "items": {
              "$ref": "#/components/schemas/SystemExtensionBooleanExpression"
            },
            "type": "array",
            "x-item": 17,
            "x-type": "LIST"
          },
          "regexMatch": {
            "$ref": "#/components/schemas/SystemExtensionRegexMatchExpression"
          }
        },
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionChannelCall": {
        "properties": {
          "channelKey": {
            "type": "string",
            "x-type": "STRING"
          }
        },
        "required": [
          "channelKey"
        ],
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionError": {
        "properties": {
          "code": {
            "type": "string",
            "x-type": "ENUM"
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/SystemExtensionErrorField"
            },
            "type": "array",
            "x-item": 17,
            "x-type": "LIST"
          },
          "message": {
            "type": "string",
            "x-type": "STRING"
          }
        },
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionErrorField": {
        "properties": {
          "message": {
            "type": "string",
            "x-type": "STRING"
          },
          "property": {
            "type": "string",
            "x-type": "STRING"
          },
          "recordId": {
            "type": "string",
            "x-type": "STRING"
          },
          "value": {
            "type": "object",
            "x-type": "OBJECT"
          }
        },
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionEvent": {
        "properties": {
          "action": {
            "type": "string",
            "x-type": "ENUM"
          },
          "actionDescription": {
            "type": "string",
            "x-type": "STRING"
          },
          "actionName": {
            "type": "string",
            "x-type": "STRING"
          },
          "actionSummary": {
            "type": "string",
            "x-type": "STRING"
          },
          "annotations": {
            "additionalProperties": {
              "type": "string",
              "x-type": "STRING"
            },
            "example": {
              "CheckVersion": "true",
              "CommonType": "testType",
              "IgnoreIfExists": "true"
            },
            "type": "object",
            "x-SpecialProperty": "true",
            "x-item": 1,
            "x-type": "MAP"
          },
          "error": {
            "$ref": "#/components/schemas/SystemExtensionError"
          },
          "finalizes": {
            "type": "boolean",
            "x-type": "BOOL"
          },
          "id": {
            "type": "string",
            "x-immutable": true,
            "x-type": "STRING"
          },
          "input": {
            "type": "object",
            "x-type": "OBJECT"
          },
          "output": {
            "type": "object",
            "x-type": "OBJECT"
          },
          "recordSearchParams": {
            "$ref": "#/components/schemas/SystemExtensionRecordSearchParams"
          },
          "records": {
            "items": {
              "$ref": "#/components/schemas/SystemRecord"
            },
            "type": "array",
            "x-item": 15,
            "x-type": "LIST"
          },
          "resource": {
            "$ref": "#/components/schemas/SystemResource"
          },
          "sync": {
            "type": "boolean",
            "x-type": "BOOL"
          },
          "time": {
            "format": "datetime",
            "type": "string",
            "x-type": "TIMESTAMP"
          },
          "total": {
            "format": "int64",
            "type": "number",
            "x-type": "INT64"
          }
        },
        "required": [
          "id",
          "action"
        ],
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionEventSelector": {
        "properties": {
          "actions": {
            "items": {
              "type": "string",
              "x-TypeName": "EventAction",
              "x-type": "ENUM"
            },
            "type": "array",
            "x-item": 16,
            "x-type": "LIST"
          },
          "annotations": {
            "additionalProperties": {
              "type": "string",
              "x-type": "STRING"
            },
            "example": {
              "CheckVersion": "true",
              "CommonType": "testType",
              "IgnoreIfExists": "true"
            },
            "type": "object",
            "x-SpecialProperty": "true",
            "x-item": 1,
            "x-type": "MAP"
          },
          "ids": {
            "items": {
              "type": "string",
              "x-type": "STRING"
            },
            "type": "array",
            "x-item": 1,
            "x-type": "LIST"
          },
          "namespaces": {
            "items": {
              "type": "string",
              "x-type": "STRING"
            },
            "type": "array",
            "x-item": 1,
            "x-type": "LIST"
          },
          "recordSelector": {
            "$ref": "#/components/schemas/SystemExtensionBooleanExpression"
          },
          "resources": {
            "items": {
              "type": "string",
              "x-type": "STRING"
            },
            "type": "array",
            "x-item": 1,
            "x-type": "LIST"
          }
        },
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionExpression": {
        "properties": {
          "property": {
            "type": "string",
            "x-type": "STRING"
          },
          "value": {
            "type": "object",
            "x-type": "OBJECT"
          }
        },
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionExternalCall": {
        "properties": {
          "channelCall": {
            "$ref": "#/components/schemas/SystemExtensionChannelCall"
          },
          "functionCall": {
            "$ref": "#/components/schemas/SystemExtensionFunctionCall"
          },
          "httpCall": {
            "$ref": "#/components/schemas/SystemExtensionHttpCall"
          }
        },
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionFunctionCall": {
        "properties": {
          "functionName": {
            "type": "string",
            "x-type": "STRING"
          },
          "host": {
            "type": "string",
            "x-type": "STRING"
          }
        },
        "required": [
          "host",
          "functionName"
        ],
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionHttpCall": {
        "properties": {
          "method": {
            "type": "string",
            "x-type": "STRING"
          },
          "uri": {
            "type": "string",
            "x-type": "STRING"
          }
        },
        "required": [
          "uri",
          "method"
        ],
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionPairExpression": {
        "properties": {
          "left": {
            "$ref": "#/components/schemas/SystemExtensionExpression"
          },
          "right": {
            "$ref": "#/components/schemas/SystemExtensionExpression"
          }
        },
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionRecordSearchParams": {
        "properties": {
          "limit": {
            "format": "int32",
            "type": "number",
            "x-type": "INT32"
          },
          "offset": {
            "format": "int32",
            "type": "number",
            "x-type": "INT32"
          },
          "query": {
            "$ref": "#/components/schemas/SystemExtensionBooleanExpression"
          },
          "resolveReferences": {
            "items": {
              "type": "string",
              "x-type": "STRING"
            },
            "type": "array",
            "x-item": 1,
            "x-type": "LIST"
          }
        },
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionRegexMatchExpression": {
        "properties": {
          "expression": {
            "$ref": "#/components/schemas/SystemExtensionExpression"
          },
          "pattern": {
            "type": "string",
            "x-type": "STRING"
          }
        },
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemNamespace": {
        "properties": {
          "auditData": {
            "$ref": "#/components/schemas/SystemNamespaceAuditData"
          },
          "description": {
            "type": "string",
            "x-type": "STRING"
          },
          "details": {
            "type": "object",
            "x-type": "OBJECT"
          },
          "id": {
            "example": "a39621a4-6d48-11ee-b962-0242ac120002",
            "format": "uuid",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "UUID"
          },
          "name": {
            "type": "string",
            "uniqueItems": true,
            "x-IsHclLabel": "true",
            "x-immutable": true,
            "x-type": "STRING"
          },
          "version": {
            "default": 1,
            "example": 1,
            "format": "int32",
            "type": "number",
            "x-AllowEmptyPrimitive": "true",
            "x-SpecialProperty": "true",
            "x-type": "INT32"
          }
        },
        "required": [
          "id",
          "version",
          "name"
        ],
        "type": "object",
        "x-resource": "Namespace"
      },
      "SystemNamespaceAuditData": {
        "description": "Audit Data is a type that represents the audit data of a resource/record. ",
        "properties": {
          "createdBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "STRING"
          },
          "createdOn": {
            "example": "2024-02-17T21:08:41+03:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "TIMESTAMP"
          },
          "updatedBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "STRING"
          },
          "updatedOn": {
            "example": "2024-02-17T21:08:41+03:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "TIMESTAMP"
          }
        },
        "title": "Audit Data",
        "type": "object",
        "x-resource": "Namespace"
      },
      "Token": {
        "example": {
          "content": "eyJhbGciOiJSUzI1NiIsI-8pl63y8h-ZOLM",
          "expiration": "2023-10-16T15:14:11.161530Z",
          "term": "SHORT"
        },
        "properties": {
          "content": {
            "type": "string"
          },
          "expiration": {
            "format": "date-time",
            "type": "string"
          },
          "term": {
            "$ref": "#/components/schemas/TokenTerm"
          }
        },
        "type": "object"
      },
      "TokenTerm": {
        "enum": [
          "VERY_SHORT",
          "SHORT",
          "MIDDLE",
          "LONG",
          "VERY_LONG"
        ],
        "example": "LONG",
        "format": "enum",
        "type": "string"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "name": "API Brew"
    },
    "description": "OpenApi 3.0 definition for API Brew Rest API",
    "license": {
      "name": "Apache License",
      "url": "https://github.com/google/gnostic/blob/master/LICENSE"
    },
    "title": "API Brew",
    "version": "1.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/authentication/token": {
      "post": {
        "description": "The access token is used to authenticate the user for all the endpoints which needs authentication.",
        "operationId": "getAuthenticationToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            },
            "description": "Authentication Response"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "code": "RECORD_VALIDATION_ERROR",
                  "message": "json: cannot unmarshal number into Go struct field AuthenticationRequest.password of type string"
                }
              }
            },
            "description": "Unauthorized"
          },
          "401": {
            "content": {
              "application/json": {
                "example": {
                  "code": "AUTHENTICATION_FAILED",
                  "message": "Authentication failed"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "summary": "This endpoint is used to authenticate the user and get the access token.",
        "tags": [
          "Authentication"
        ]
      },
      "put": {
        "description": "The access token is used to authenticate the user for all the endpoints which needs authentication.",
        "operationId": "refreshAuthenticationToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            },
            "description": "Authentication Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "This endpoint is used to refresh the access token.",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/system-audit-log": {
      "description": "Api for AuditLog",
      "get": {
        "description": "Api for AuditLog - List items",
        "operationId": "listAuditLog",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "items": {
                        "$ref": "#/components/schemas/SystemAuditLog"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "AuditLog - List items",
        "tags": [
          "system / AuditLog API"
        ]
      },
      "patch": {
        "description": "Api for AuditLog - Apply an item, it will check id and unique properties, if such item is exists, update operation will be executed, if not create operation is executed. If There are no change between updating record and existing record, nothing will be done",
        "operationId": "applyAuditLog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemAuditLog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemAuditLog"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "AuditLog - Apply an item",
        "tags": [
          "system / AuditLog API"
        ]
      },
      "post": {
        "description": "Api for AuditLog - Create new item",
        "operationId": "createAuditLog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemAuditLog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemAuditLog"
                }
              }
            },
            "description": "Created item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "AuditLog - Create new item",
        "tags": [
          "system / AuditLog API"
        ]
      },
      "summary": "AuditLog"
    },
    "/system-audit-log/_search": {
      "description": "Api for AuditLog - Search",
      "post": {
        "description": "Api for AuditLog - Search items",
        "operationId": "searchAuditLog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRecordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemAuditLog"
                    }
                  }
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "AuditLog - Search items",
        "tags": [
          "system / AuditLog API"
        ]
      },
      "summary": "AuditLog - Search"
    },
    "/system-audit-log/{id}": {
      "delete": {
        "description": "Api for AuditLog - Delete_ item",
        "operationId": "deleteAuditLog",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemAuditLog"
                    }
                  }
                }
              }
            },
            "description": "Deleted item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "AuditLog - Delete_ item",
        "tags": [
          "system / AuditLog API"
        ]
      },
      "description": "Api for AuditLog",
      "get": {
        "description": "Api for AuditLog - Get_ item",
        "operationId": "getAuditLog",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemAuditLog"
                    }
                  }
                }
              }
            },
            "description": "Item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "AuditLog - Get_ item",
        "tags": [
          "system / AuditLog API"
        ]
      },
      "put": {
        "description": "Api for AuditLog - Update item",
        "operationId": "updateAuditLog",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemAuditLog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemAuditLog"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "AuditLog - Update item",
        "tags": [
          "system / AuditLog API"
        ]
      },
      "summary": "AuditLog"
    },
    "/system-data-source": {
      "description": "Api for DataSource",
      "get": {
        "description": "Api for DataSource - List items",
        "operationId": "listDataSource",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "items": {
                        "$ref": "#/components/schemas/SystemDataSource"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "DataSource - List items",
        "tags": [
          "system / DataSource API"
        ]
      },
      "patch": {
        "description": "Api for DataSource - Apply an item, it will check id and unique properties, if such item is exists, update operation will be executed, if not create operation is executed. If There are no change between updating record and existing record, nothing will be done",
        "operationId": "applyDataSource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemDataSource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemDataSource"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "DataSource - Apply an item",
        "tags": [
          "system / DataSource API"
        ]
      },
      "post": {
        "description": "Api for DataSource - Create new item",
        "operationId": "createDataSource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemDataSource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemDataSource"
                }
              }
            },
            "description": "Created item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "DataSource - Create new item",
        "tags": [
          "system / DataSource API"
        ]
      },
      "summary": "DataSource"
    },
    "/system-data-source/_search": {
      "description": "Api for DataSource - Search",
      "post": {
        "description": "Api for DataSource - Search items",
        "operationId": "searchDataSource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRecordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemDataSource"
                    }
                  }
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "DataSource - Search items",
        "tags": [
          "system / DataSource API"
        ]
      },
      "summary": "DataSource - Search"
    },
    "/system-data-source/{id}": {
      "delete": {
        "description": "Api for DataSource - Delete_ item",
        "operationId": "deleteDataSource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemDataSource"
                    }
                  }
                }
              }
            },
            "description": "Deleted item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "DataSource - Delete_ item",
        "tags": [
          "system / DataSource API"
        ]
      },
      "description": "Api for DataSource",
      "get": {
        "description": "Api for DataSource - Get_ item",
        "operationId": "getDataSource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemDataSource"
                    }
                  }
                }
              }
            },
            "description": "Item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "DataSource - Get_ item",
        "tags": [
          "system / DataSource API"
        ]
      },
      "put": {
        "description": "Api for DataSource - Update item",
        "operationId": "updateDataSource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemDataSource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemDataSource"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "DataSource - Update item",
        "tags": [
          "system / DataSource API"
        ]
      },
      "summary": "DataSource"
    },
    "/system-extension": {
      "description": "Api for Extension",
      "get": {
        "description": "Api for Extension - List items",
        "operationId": "listExtension",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "items": {
                        "$ref": "#/components/schemas/SystemExtension"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Extension - List items",
        "tags": [
          "system / Extension API"
        ]
      },
      "patch": {
        "description": "Api for Extension - Apply an item, it will check id and unique properties, if such item is exists, update operation will be executed, if not create operation is executed. If There are no change between updating record and existing record, nothing will be done",
        "operationId": "applyExtension",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemExtension"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemExtension"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Extension - Apply an item",
        "tags": [
          "system / Extension API"
        ]
      },
      "post": {
        "description": "Api for Extension - Create new item",
        "operationId": "createExtension",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemExtension"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemExtension"
                }
              }
            },
            "description": "Created item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Extension - Create new item",
        "tags": [
          "system / Extension API"
        ]
      },
      "summary": "Extension"
    },
    "/system-extension/_search": {
      "description": "Api for Extension - Search",
      "post": {
        "description": "Api for Extension - Search items",
        "operationId": "searchExtension",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRecordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemExtension"
                    }
                  }
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Extension - Search items",
        "tags": [
          "system / Extension API"
        ]
      },
      "summary": "Extension - Search"
    },
    "/system-extension/{id}": {
      "delete": {
        "description": "Api for Extension - Delete_ item",
        "operationId": "deleteExtension",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemExtension"
                    }
                  }
                }
              }
            },
            "description": "Deleted item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Extension - Delete_ item",
        "tags": [
          "system / Extension API"
        ]
      },
      "description": "Api for Extension",
      "get": {
        "description": "Api for Extension - Get_ item",
        "operationId": "getExtension",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemExtension"
                    }
                  }
                }
              }
            },
            "description": "Item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Extension - Get_ item",
        "tags": [
          "system / Extension API"
        ]
      },
      "put": {
        "description": "Api for Extension - Update item",
        "operationId": "updateExtension",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemExtension"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemExtension"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Extension - Update item",
        "tags": [
          "system / Extension API"
        ]
      },
      "summary": "Extension"
    },
    "/system-namespace": {
      "description": "Api for Namespace",
      "get": {
        "description": "Api for Namespace - List items",
        "operationId": "listNamespace",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "items": {
                        "$ref": "#/components/schemas/SystemNamespace"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Namespace - List items",
        "tags": [
          "system / Namespace API"
        ]
      },
      "patch": {
        "description": "Api for Namespace - Apply an item, it will check id and unique properties, if such item is exists, update operation will be executed, if not create operation is executed. If There are no change between updating record and existing record, nothing will be done",
        "operationId": "applyNamespace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemNamespace"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemNamespace"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Namespace - Apply an item",
        "tags": [
          "system / Namespace API"
        ]
      },
      "post": {
        "description": "Api for Namespace - Create new item",
        "operationId": "createNamespace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemNamespace"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemNamespace"
                }
              }
            },
            "description": "Created item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Namespace - Create new item",
        "tags": [
          "system / Namespace API"
        ]
      },
      "summary": "Namespace"
    },
    "/system-namespace/_search": {
      "description": "Api for Namespace - Search",
      "post": {
        "description": "Api for Namespace - Search items",
        "operationId": "searchNamespace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRecordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemNamespace"
                    }
                  }
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Namespace - Search items",
        "tags": [
          "system / Namespace API"
        ]
      },
      "summary": "Namespace - Search"
    },
    "/system-namespace/{id}": {
      "delete": {
        "description": "Api for Namespace - Delete_ item",
        "operationId": "deleteNamespace",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemNamespace"
                    }
                  }
                }
              }
            },
            "description": "Deleted item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Namespace - Delete_ item",
        "tags": [
          "system / Namespace API"
        ]
      },
      "description": "Api for Namespace",
      "get": {
        "description": "Api for Namespace - Get_ item",
        "operationId": "getNamespace",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemNamespace"
                    }
                  }
                }
              }
            },
            "description": "Item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Namespace - Get_ item",
        "tags": [
          "system / Namespace API"
        ]
      },
      "put": {
        "description": "Api for Namespace - Update item",
        "operationId": "updateNamespace",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemNamespace"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemNamespace"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Namespace - Update item",
        "tags": [
          "system / Namespace API"
        ]
      },
      "summary": "Namespace"
    },
    "/{namespace}-{resource}": {
      "description": "A generic record resource. All Apis are extended from Generic Record resource",
      "get": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - List items",
        "operationId": "listRecord",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "items": {
                        "additionalProperties": true,
                        "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                        "title": "Generic Record"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - List items",
        "tags": [
          "Records Generic API"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "namespace",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "resource",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - Apply an item, it will check id and unique properties, if such item is exists, update operation will be executed, if not create operation is executed. If There are no change between updating record and existing record, nothing will be done",
        "operationId": "applyRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                "title": "Generic Record"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                  "title": "Generic Record"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Apply an item",
        "tags": [
          "Records Generic API"
        ]
      },
      "post": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - Create new item",
        "operationId": "createRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                "title": "Generic Record"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                  "title": "Generic Record"
                }
              }
            },
            "description": "Created item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Create new item",
        "tags": [
          "Records Generic API"
        ]
      },
      "summary": "Generic Record"
    },
    "/{namespace}-{resource}/{id}": {
      "delete": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - Delete_ item",
        "operationId": "deleteRecord",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "additionalProperties": true,
                      "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                      "title": "Generic Record"
                    }
                  }
                }
              }
            },
            "description": "Deleted item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Delete_ item",
        "tags": [
          "Records Generic API"
        ]
      },
      "description": "A generic record resource. All Apis are extended from Generic Record resource",
      "get": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - Get_ item",
        "operationId": "getRecord",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "additionalProperties": true,
                      "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                      "title": "Generic Record"
                    }
                  }
                }
              }
            },
            "description": "Item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Get_ item",
        "tags": [
          "Records Generic API"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "namespace",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "resource",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - Update item",
        "operationId": "updateRecord",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                "title": "Generic Record"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                  "title": "Generic Record"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Update item",
        "tags": [
          "Records Generic API"
        ]
      },
      "summary": "Generic Record"
    },
    "/{namespace}-{resource}/{id}/_search": {
      "description": "A generic record resource. All Apis are extended from Generic Record resource - Search",
      "parameters": [
        {
          "in": "path",
          "name": "namespace",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "resource",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - Search items",
        "operationId": "searchRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRecordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "additionalProperties": true,
                      "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                      "title": "Generic Record"
                    }
                  }
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Search items",
        "tags": [
          "Records Generic API"
        ]
      },
      "summary": "Generic Record - Search"
    },
    "/{namespace}-{resource}/{id}/{action}": {
      "parameters": [
        {
          "in": "path",
          "name": "namespace",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "resource",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "operationId": "actionRecord",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "additionalProperties": true,
                      "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                      "title": "Generic Record"
                    }
                  }
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Records Generic API"
        ]
      },
      "summary": "Generic Record - Action"
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "description": "Authentication APIs are used to authenticate users and get access to the resources. For all endpoints, which needs you to be authenticated, you need to pass the access token in the header.\n                The access token is obtained by calling the authenticate endpoint.",
      "name": "Authentication"
    }
  ]
}
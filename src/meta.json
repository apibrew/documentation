{
  "components": {
    "schemas": {
      "AuthenticationRequest": {
        "properties": {
          "password": {
            "example": "admin",
            "type": "string"
          },
          "term": {
            "$ref": "#/components/schemas/TokenTerm"
          },
          "username": {
            "example": "admin",
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "AuthenticationResponse": {
        "properties": {
          "token": {
            "$ref": "#/components/schemas/Token"
          }
        },
        "required": [
          "token"
        ]
      },
      "BooleanExpression": {
        "type": "object"
      },
      "Error": {
        "properties": {
          "code": {
            "type": "string"
          },
          "details": {
            "type": "object"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "RefreshTokenRequest": {
        "properties": {
          "term": {
            "$ref": "#/components/schemas/TokenTerm"
          },
          "token": {
            "example": "admin",
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "RefreshTokenResponse": {
        "properties": {
          "token": {
            "$ref": "#/components/schemas/Token"
          }
        },
        "required": [
          "token"
        ]
      },
      "SearchRecordRequest": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "limit": {
            "type": "integer"
          },
          "offset": {
            "type": "integer"
          },
          "query": {
            "$ref": "#/components/schemas/BooleanExpression"
          },
          "resolveReferences": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "useHistory": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SystemAuditLog": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string",
              "x-type": "STRING"
            },
            "example": {
              "CheckVersion": "true",
              "CommonType": "testType",
              "IgnoreIfExists": "true"
            },
            "type": "object",
            "x-SpecialProperty": "true",
            "x-item": 1,
            "x-type": "MAP"
          },
          "id": {
            "example": "a39621a4-6d48-11ee-b962-0242ac120002",
            "format": "uuid",
            "type": "string",
            "x-PrimaryProperty": "true",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "UUID"
          },
          "namespace": {
            "type": "string",
            "x-type": "STRING"
          },
          "operation": {
            "type": "string",
            "x-type": "ENUM"
          },
          "properties": {
            "type": "object",
            "x-type": "OBJECT"
          },
          "recordId": {
            "type": "string",
            "x-SourceDef": "record_id",
            "x-type": "STRING"
          },
          "resource": {
            "type": "string",
            "x-type": "STRING"
          },
          "time": {
            "format": "datetime",
            "type": "string",
            "x-type": "TIMESTAMP"
          },
          "username": {
            "type": "string",
            "x-type": "STRING"
          },
          "version": {
            "default": 1,
            "example": 1,
            "format": "int32",
            "type": "number",
            "x-AllowEmptyPrimitive": "true",
            "x-SpecialProperty": "true",
            "x-type": "INT32"
          }
        },
        "required": [
          "id",
          "version",
          "namespace",
          "resource",
          "recordId",
          "time",
          "username",
          "operation"
        ],
        "type": "object",
        "x-resource": "AuditLog"
      },
      "SystemDataSource": {
        "properties": {
          "auditData": {
            "$ref": "#/components/schemas/SystemDataSourceAuditData"
          },
          "backend": {
            "type": "string",
            "x-type": "ENUM"
          },
          "description": {
            "type": "string",
            "x-AllowEmptyPrimitive": "true",
            "x-type": "STRING"
          },
          "id": {
            "example": "a39621a4-6d48-11ee-b962-0242ac120002",
            "format": "uuid",
            "type": "string",
            "x-PrimaryProperty": "true",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "UUID"
          },
          "name": {
            "type": "string",
            "uniqueItems": true,
            "x-IsHclLabel": "true",
            "x-type": "STRING"
          },
          "options": {
            "additionalProperties": {
              "type": "string",
              "x-type": "STRING"
            },
            "type": "object",
            "x-item": 1,
            "x-type": "MAP"
          },
          "version": {
            "default": 1,
            "example": 1,
            "format": "int32",
            "type": "number",
            "x-AllowEmptyPrimitive": "true",
            "x-SpecialProperty": "true",
            "x-type": "INT32"
          }
        },
        "required": [
          "id",
          "version",
          "name",
          "backend",
          "options"
        ],
        "type": "object",
        "x-resource": "DataSource"
      },
      "SystemDataSourceAuditData": {
        "description": "Audit Data is a type that represents the audit data of a resource/record. ",
        "properties": {
          "createdBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "STRING"
          },
          "createdOn": {
            "example": "2023-10-18T14:16:33+04:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "TIMESTAMP"
          },
          "updatedBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "STRING"
          },
          "updatedOn": {
            "example": "2023-10-18T14:16:33+04:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "TIMESTAMP"
          }
        },
        "title": "Audit Data",
        "type": "object",
        "x-resource": "DataSource"
      },
      "SystemExtension": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string",
              "x-type": "STRING"
            },
            "example": {
              "CheckVersion": "true",
              "CommonType": "testType",
              "IgnoreIfExists": "true"
            },
            "type": "object",
            "x-SpecialProperty": "true",
            "x-item": 1,
            "x-type": "MAP"
          },
          "auditData": {
            "$ref": "#/components/schemas/SystemExtensionAuditData"
          },
          "call": {
            "$ref": "#/components/schemas/SystemExtensionExternalCall"
          },
          "description": {
            "type": "string",
            "x-type": "STRING"
          },
          "finalizes": {
            "type": "boolean",
            "x-type": "BOOL"
          },
          "id": {
            "example": "a39621a4-6d48-11ee-b962-0242ac120002",
            "format": "uuid",
            "type": "string",
            "x-PrimaryProperty": "true",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "UUID"
          },
          "name": {
            "type": "string",
            "uniqueItems": true,
            "x-IsHclLabel": "true",
            "x-type": "STRING"
          },
          "order": {
            "format": "int32",
            "type": "number",
            "x-type": "INT32"
          },
          "responds": {
            "type": "boolean",
            "x-type": "BOOL"
          },
          "selector": {
            "$ref": "#/components/schemas/SystemExtensionEventSelector"
          },
          "sync": {
            "type": "boolean",
            "x-type": "BOOL"
          },
          "version": {
            "default": 1,
            "example": 1,
            "format": "int32",
            "type": "number",
            "x-AllowEmptyPrimitive": "true",
            "x-SpecialProperty": "true",
            "x-type": "INT32"
          }
        },
        "required": [
          "id",
          "version",
          "name",
          "order",
          "finalizes",
          "sync",
          "responds",
          "call"
        ],
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionAuditData": {
        "description": "Audit Data is a type that represents the audit data of a resource/record. ",
        "properties": {
          "createdBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "STRING"
          },
          "createdOn": {
            "example": "2023-10-18T14:16:33+04:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "TIMESTAMP"
          },
          "updatedBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "STRING"
          },
          "updatedOn": {
            "example": "2023-10-18T14:16:33+04:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "TIMESTAMP"
          }
        },
        "title": "Audit Data",
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionBooleanExpression": {
        "properties": {
          "and": {
            "items": {
              "$ref": "#/components/schemas/SystemExtensionBooleanExpression"
            },
            "type": "array",
            "x-item": 17,
            "x-type": "LIST"
          },
          "equal": {
            "$ref": "#/components/schemas/SystemExtensionPairExpression"
          },
          "greaterThan": {
            "$ref": "#/components/schemas/SystemExtensionPairExpression"
          },
          "greaterThanOrEqual": {
            "$ref": "#/components/schemas/SystemExtensionPairExpression"
          },
          "in": {
            "$ref": "#/components/schemas/SystemExtensionPairExpression"
          },
          "isNull": {
            "$ref": "#/components/schemas/SystemExtensionExpression"
          },
          "lessThan": {
            "$ref": "#/components/schemas/SystemExtensionPairExpression"
          },
          "lessThanOrEqual": {
            "$ref": "#/components/schemas/SystemExtensionPairExpression"
          },
          "not": {
            "$ref": "#/components/schemas/SystemExtensionBooleanExpression"
          },
          "or": {
            "items": {
              "$ref": "#/components/schemas/SystemExtensionBooleanExpression"
            },
            "type": "array",
            "x-item": 17,
            "x-type": "LIST"
          },
          "regexMatch": {
            "$ref": "#/components/schemas/SystemExtensionRegexMatchExpression"
          }
        },
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionChannelCall": {
        "properties": {
          "channelKey": {
            "type": "string",
            "x-type": "STRING"
          }
        },
        "required": [
          "channelKey"
        ],
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionError": {
        "properties": {
          "code": {
            "type": "string",
            "x-type": "ENUM"
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/SystemExtensionErrorField"
            },
            "type": "array",
            "x-item": 17,
            "x-type": "LIST"
          },
          "message": {
            "type": "string",
            "x-type": "STRING"
          }
        },
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionErrorField": {
        "properties": {
          "message": {
            "type": "string",
            "x-type": "STRING"
          },
          "property": {
            "type": "string",
            "x-type": "STRING"
          },
          "recordId": {
            "type": "string",
            "x-type": "STRING"
          },
          "value": {
            "type": "object",
            "x-type": "OBJECT"
          }
        },
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionEvent": {
        "properties": {
          "action": {
            "type": "string",
            "x-type": "ENUM"
          },
          "actionDescription": {
            "type": "string",
            "x-type": "STRING"
          },
          "actionName": {
            "type": "string",
            "x-type": "STRING"
          },
          "actionSummary": {
            "type": "string",
            "x-type": "STRING"
          },
          "annotations": {
            "additionalProperties": {
              "type": "string",
              "x-type": "STRING"
            },
            "example": {
              "CheckVersion": "true",
              "CommonType": "testType",
              "IgnoreIfExists": "true"
            },
            "type": "object",
            "x-SpecialProperty": "true",
            "x-item": 1,
            "x-type": "MAP"
          },
          "error": {
            "$ref": "#/components/schemas/SystemExtensionError"
          },
          "finalizes": {
            "type": "boolean",
            "x-type": "BOOL"
          },
          "id": {
            "type": "string",
            "x-immutable": true,
            "x-type": "STRING"
          },
          "ids": {
            "items": {
              "type": "string",
              "x-type": "STRING"
            },
            "type": "array",
            "x-item": 1,
            "x-type": "LIST"
          },
          "input": {
            "type": "object",
            "x-type": "OBJECT"
          },
          "output": {
            "type": "object",
            "x-type": "OBJECT"
          },
          "recordSearchParams": {
            "$ref": "#/components/schemas/SystemExtensionRecordSearchParams"
          },
          "records": {
            "items": {
              "$ref": "#/components/schemas/SystemRecord"
            },
            "type": "array",
            "x-item": 15,
            "x-type": "LIST"
          },
          "resource": {
            "$ref": "#/components/schemas/SystemResource"
          },
          "sync": {
            "type": "boolean",
            "x-type": "BOOL"
          },
          "time": {
            "format": "datetime",
            "type": "string",
            "x-type": "TIMESTAMP"
          },
          "total": {
            "format": "int64",
            "type": "number",
            "x-type": "INT64"
          }
        },
        "required": [
          "id",
          "action"
        ],
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionEventSelector": {
        "properties": {
          "actions": {
            "items": {
              "type": "string",
              "x-TypeName": "EventAction",
              "x-type": "ENUM"
            },
            "type": "array",
            "x-item": 16,
            "x-type": "LIST"
          },
          "annotations": {
            "additionalProperties": {
              "type": "string",
              "x-type": "STRING"
            },
            "example": {
              "CheckVersion": "true",
              "CommonType": "testType",
              "IgnoreIfExists": "true"
            },
            "type": "object",
            "x-SpecialProperty": "true",
            "x-item": 1,
            "x-type": "MAP"
          },
          "ids": {
            "items": {
              "type": "string",
              "x-type": "STRING"
            },
            "type": "array",
            "x-item": 1,
            "x-type": "LIST"
          },
          "namespaces": {
            "items": {
              "type": "string",
              "x-type": "STRING"
            },
            "type": "array",
            "x-item": 1,
            "x-type": "LIST"
          },
          "recordSelector": {
            "$ref": "#/components/schemas/SystemExtensionBooleanExpression"
          },
          "resources": {
            "items": {
              "type": "string",
              "x-type": "STRING"
            },
            "type": "array",
            "x-item": 1,
            "x-type": "LIST"
          }
        },
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionExpression": {
        "properties": {
          "property": {
            "type": "string",
            "x-type": "STRING"
          },
          "refValue": {
            "$ref": "#/components/schemas/SystemExtensionRefValue"
          },
          "value": {
            "type": "object",
            "x-type": "OBJECT"
          }
        },
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionExternalCall": {
        "properties": {
          "channelCall": {
            "$ref": "#/components/schemas/SystemExtensionChannelCall"
          },
          "functionCall": {
            "$ref": "#/components/schemas/SystemExtensionFunctionCall"
          },
          "httpCall": {
            "$ref": "#/components/schemas/SystemExtensionHttpCall"
          }
        },
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionFunctionCall": {
        "properties": {
          "functionName": {
            "type": "string",
            "x-type": "STRING"
          },
          "host": {
            "type": "string",
            "x-type": "STRING"
          }
        },
        "required": [
          "host",
          "functionName"
        ],
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionHttpCall": {
        "properties": {
          "method": {
            "type": "string",
            "x-type": "STRING"
          },
          "uri": {
            "type": "string",
            "x-type": "STRING"
          }
        },
        "required": [
          "uri",
          "method"
        ],
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionPairExpression": {
        "properties": {
          "left": {
            "$ref": "#/components/schemas/SystemExtensionExpression"
          },
          "right": {
            "$ref": "#/components/schemas/SystemExtensionExpression"
          }
        },
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionRecordSearchParams": {
        "properties": {
          "limit": {
            "format": "int32",
            "type": "number",
            "x-type": "INT32"
          },
          "offset": {
            "format": "int32",
            "type": "number",
            "x-type": "INT32"
          },
          "query": {
            "$ref": "#/components/schemas/SystemExtensionBooleanExpression"
          },
          "resolveReferences": {
            "items": {
              "type": "string",
              "x-type": "STRING"
            },
            "type": "array",
            "x-item": 1,
            "x-type": "LIST"
          }
        },
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionRefValue": {
        "properties": {
          "namespace": {
            "type": "string",
            "x-type": "STRING"
          },
          "properties": {
            "additionalProperties": {
              "type": "object",
              "x-type": "OBJECT"
            },
            "type": "object",
            "x-item": 12,
            "x-type": "MAP"
          },
          "resource": {
            "type": "string",
            "x-type": "STRING"
          }
        },
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemExtensionRegexMatchExpression": {
        "properties": {
          "expression": {
            "$ref": "#/components/schemas/SystemExtensionExpression"
          },
          "pattern": {
            "type": "string",
            "x-type": "STRING"
          }
        },
        "type": "object",
        "x-resource": "Extension"
      },
      "SystemNamespace": {
        "properties": {
          "auditData": {
            "$ref": "#/components/schemas/SystemNamespaceAuditData"
          },
          "description": {
            "type": "string",
            "x-type": "STRING"
          },
          "details": {
            "type": "object",
            "x-type": "OBJECT"
          },
          "id": {
            "example": "a39621a4-6d48-11ee-b962-0242ac120002",
            "format": "uuid",
            "type": "string",
            "x-PrimaryProperty": "true",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "UUID"
          },
          "name": {
            "type": "string",
            "uniqueItems": true,
            "x-IsHclLabel": "true",
            "x-immutable": true,
            "x-type": "STRING"
          },
          "version": {
            "default": 1,
            "example": 1,
            "format": "int32",
            "type": "number",
            "x-AllowEmptyPrimitive": "true",
            "x-SpecialProperty": "true",
            "x-type": "INT32"
          }
        },
        "required": [
          "id",
          "version",
          "name"
        ],
        "type": "object",
        "x-resource": "Namespace"
      },
      "SystemNamespaceAuditData": {
        "description": "Audit Data is a type that represents the audit data of a resource/record. ",
        "properties": {
          "createdBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "STRING"
          },
          "createdOn": {
            "example": "2023-10-18T14:16:33+04:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "TIMESTAMP"
          },
          "updatedBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "STRING"
          },
          "updatedOn": {
            "example": "2023-10-18T14:16:33+04:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "TIMESTAMP"
          }
        },
        "title": "Audit Data",
        "type": "object",
        "x-resource": "Namespace"
      },
      "SystemPermission": {
        "properties": {
          "after": {
            "format": "datetime",
            "type": "string",
            "x-type": "TIMESTAMP"
          },
          "auditData": {
            "$ref": "#/components/schemas/SystemPermissionAuditData"
          },
          "before": {
            "format": "datetime",
            "type": "string",
            "x-type": "TIMESTAMP"
          },
          "id": {
            "example": "a39621a4-6d48-11ee-b962-0242ac120002",
            "format": "uuid",
            "type": "string",
            "x-PrimaryProperty": "true",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "UUID"
          },
          "localFlags": {
            "type": "object",
            "x-type": "OBJECT"
          },
          "namespace": {
            "type": "string",
            "x-type": "STRING"
          },
          "operation": {
            "default": "FULL",
            "type": "string",
            "x-type": "ENUM"
          },
          "permit": {
            "type": "string",
            "x-type": "ENUM"
          },
          "property": {
            "type": "string",
            "x-type": "STRING"
          },
          "propertyMode": {
            "type": "string",
            "x-type": "ENUM"
          },
          "propertyValue": {
            "type": "string",
            "x-type": "STRING"
          },
          "recordIds": {
            "items": {
              "type": "string",
              "x-type": "STRING"
            },
            "type": "array",
            "x-item": 1,
            "x-type": "LIST"
          },
          "resource": {
            "type": "string",
            "x-type": "STRING"
          },
          "role": {
            "$ref": "#/components/schemas/SystemRole"
          },
          "user": {
            "$ref": "#/components/schemas/SystemUser"
          },
          "version": {
            "default": 1,
            "example": 1,
            "format": "int32",
            "type": "number",
            "x-AllowEmptyPrimitive": "true",
            "x-SpecialProperty": "true",
            "x-type": "INT32"
          }
        },
        "required": [
          "id",
          "version",
          "operation",
          "permit"
        ],
        "type": "object",
        "x-resource": "Permission"
      },
      "SystemPermissionAuditData": {
        "description": "Audit Data is a type that represents the audit data of a resource/record. ",
        "properties": {
          "createdBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "STRING"
          },
          "createdOn": {
            "example": "2023-10-18T14:16:33+04:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "TIMESTAMP"
          },
          "updatedBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "STRING"
          },
          "updatedOn": {
            "example": "2023-10-18T14:16:33+04:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "TIMESTAMP"
          }
        },
        "title": "Audit Data",
        "type": "object",
        "x-resource": "Permission"
      },
      "SystemRecord": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource",
        "properties": {
          "id": {
            "example": "a39621a4-6d48-11ee-b962-0242ac120002",
            "format": "uuid",
            "type": "string",
            "x-PrimaryProperty": "true",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "UUID"
          },
          "properties": {
            "type": "object",
            "x-type": "OBJECT"
          }
        },
        "required": [
          "id",
          "properties"
        ],
        "title": "Generic Record",
        "type": "object",
        "x-resource": "Record"
      },
      "SystemResource": {
        "description": "Resource is a top level resource that represents a model and API in the system",
        "properties": {
          "abstract": {
            "default": false,
            "type": "boolean",
            "x-type": "BOOL"
          },
          "annotations": {
            "additionalProperties": {
              "type": "string",
              "x-type": "STRING"
            },
            "example": {
              "CheckVersion": "true",
              "CommonType": "testType",
              "IgnoreIfExists": "true"
            },
            "type": "object",
            "x-SpecialProperty": "true",
            "x-item": 1,
            "x-type": "MAP"
          },
          "auditData": {
            "$ref": "#/components/schemas/SystemResourceAuditData"
          },
          "catalog": {
            "example": "public",
            "type": "string",
            "x-type": "STRING"
          },
          "checkReferences": {
            "default": false,
            "type": "boolean",
            "x-type": "BOOL"
          },
          "dataSource": {
            "$ref": "#/components/schemas/SystemDataSource"
          },
          "description": {
            "example": "Book is a resource in the system. It represents a book in the system.",
            "type": "string",
            "x-type": "STRING"
          },
          "entity": {
            "example": "book",
            "type": "string",
            "x-type": "STRING"
          },
          "id": {
            "example": "a39621a4-6d48-11ee-b962-0242ac120002",
            "format": "uuid",
            "type": "string",
            "x-PrimaryProperty": "true",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "UUID"
          },
          "immutable": {
            "default": false,
            "type": "boolean",
            "x-type": "BOOL"
          },
          "indexes": {
            "items": {
              "$ref": "#/components/schemas/SystemResourceIndex"
            },
            "type": "array",
            "x-item": 17,
            "x-type": "LIST"
          },
          "name": {
            "example": "Book",
            "type": "string",
            "x-IsHclLabel": "true",
            "x-type": "STRING"
          },
          "namespace": {
            "$ref": "#/components/schemas/SystemNamespace"
          },
          "properties": {
            "example": [
              {
                "name": "title",
                "type": "name"
              },
              {
                "name": "type",
                "type": "STRING"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/SystemResourceProperty"
            },
            "type": "array",
            "x-item": 17,
            "x-type": "LIST"
          },
          "title": {
            "example": "Book",
            "type": "string",
            "x-type": "STRING"
          },
          "types": {
            "items": {
              "$ref": "#/components/schemas/SystemResourceSubType"
            },
            "type": "array",
            "x-item": 17,
            "x-type": "LIST"
          },
          "version": {
            "default": 1,
            "example": 1,
            "format": "int32",
            "type": "number",
            "x-AllowEmptyPrimitive": "true",
            "x-SpecialProperty": "true",
            "x-type": "INT32"
          },
          "virtual": {
            "default": false,
            "type": "boolean",
            "x-type": "BOOL"
          }
        },
        "required": [
          "id",
          "version",
          "name",
          "namespace",
          "virtual",
          "properties",
          "immutable",
          "abstract",
          "checkReferences"
        ],
        "title": "Resource",
        "type": "object",
        "x-resource": "Resource"
      },
      "SystemResourceAction": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string",
              "x-type": "STRING"
            },
            "example": {
              "CheckVersion": "true",
              "CommonType": "testType",
              "IgnoreIfExists": "true"
            },
            "type": "object",
            "x-SpecialProperty": "true",
            "x-item": 1,
            "x-type": "MAP"
          },
          "auditData": {
            "$ref": "#/components/schemas/SystemResourceActionAuditData"
          },
          "description": {
            "type": "string",
            "x-IsHclLabel": "true",
            "x-type": "STRING"
          },
          "id": {
            "example": "a39621a4-6d48-11ee-b962-0242ac120002",
            "format": "uuid",
            "type": "string",
            "x-PrimaryProperty": "true",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "UUID"
          },
          "input": {
            "items": {
              "$ref": "#/components/schemas/SystemResourceActionProperty"
            },
            "type": "array",
            "x-item": 17,
            "x-type": "LIST"
          },
          "internal": {
            "default": false,
            "type": "boolean",
            "x-IsHclLabel": "true",
            "x-type": "BOOL"
          },
          "name": {
            "type": "string",
            "x-IsHclLabel": "true",
            "x-type": "STRING"
          },
          "output": {
            "$ref": "#/components/schemas/SystemResourceActionProperty"
          },
          "resource": {
            "$ref": "#/components/schemas/SystemResource"
          },
          "title": {
            "type": "string",
            "x-IsHclLabel": "true",
            "x-type": "STRING"
          },
          "types": {
            "items": {
              "$ref": "#/components/schemas/SystemResourceActionSubType"
            },
            "type": "array",
            "x-item": 17,
            "x-type": "LIST"
          },
          "version": {
            "default": 1,
            "example": 1,
            "format": "int32",
            "type": "number",
            "x-AllowEmptyPrimitive": "true",
            "x-SpecialProperty": "true",
            "x-type": "INT32"
          }
        },
        "required": [
          "id",
          "version",
          "resource",
          "name",
          "internal"
        ],
        "type": "object",
        "x-resource": "ResourceAction"
      },
      "SystemResourceActionAuditData": {
        "description": "Audit Data is a type that represents the audit data of a resource/record. ",
        "properties": {
          "createdBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "STRING"
          },
          "createdOn": {
            "example": "2023-10-18T14:16:33+04:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "TIMESTAMP"
          },
          "updatedBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "STRING"
          },
          "updatedOn": {
            "example": "2023-10-18T14:16:33+04:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "TIMESTAMP"
          }
        },
        "title": "Audit Data",
        "type": "object",
        "x-resource": "ResourceAction"
      },
      "SystemResourceActionProperty": {
        "description": "Property is a type that represents a property of a resource. It is like an API properties or properties of class in a programming language",
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string",
              "x-type": "STRING"
            },
            "example": {
              "CheckVersion": "true",
              "CommonType": "testType",
              "IgnoreIfExists": "true"
            },
            "type": "object",
            "x-SpecialProperty": "true",
            "x-item": 1,
            "x-type": "MAP"
          },
          "defaultValue": {
            "example": "Lord of the Rings",
            "type": "object",
            "x-type": "OBJECT"
          },
          "description": {
            "example": "Book Title is a property of Book Resource. It represents the title of the book.",
            "type": "string",
            "x-type": "STRING"
          },
          "enumValues": {
            "example": [
              "UNKNOWN",
              "ASC",
              "DESC"
            ],
            "items": {
              "type": "string",
              "x-type": "STRING"
            },
            "type": "array",
            "x-item": 1,
            "x-type": "LIST"
          },
          "exampleValue": {
            "example": "no-book-name",
            "type": "object",
            "x-type": "OBJECT"
          },
          "immutable": {
            "default": false,
            "type": "boolean",
            "x-type": "BOOL"
          },
          "item": {
            "$ref": "#/components/schemas/SystemResourceActionProperty"
          },
          "length": {
            "default": 256,
            "example": 256,
            "format": "int32",
            "type": "number",
            "x-type": "INT32"
          },
          "name": {
            "example": "title",
            "type": "string",
            "x-type": "STRING"
          },
          "primary": {
            "default": false,
            "type": "boolean",
            "x-type": "BOOL"
          },
          "reference": {
            "$ref": "#/components/schemas/SystemResourceActionReference"
          },
          "required": {
            "default": false,
            "type": "boolean",
            "x-type": "BOOL"
          },
          "title": {
            "example": "Book Title",
            "type": "string",
            "x-type": "STRING"
          },
          "type": {
            "example": "STRING",
            "type": "string",
            "x-type": "ENUM"
          },
          "typeRef": {
            "example": "BookPublishingDetails",
            "type": "string",
            "x-type": "STRING"
          },
          "unique": {
            "default": false,
            "type": "boolean",
            "x-type": "BOOL"
          }
        },
        "required": [
          "type",
          "primary",
          "required",
          "unique",
          "immutable",
          "length"
        ],
        "title": "Property",
        "type": "object",
        "x-resource": "ResourceAction"
      },
      "SystemResourceActionReference": {
        "description": "Reference is a type that represents a reference to another resource. It is used to define the reference to another resource. ",
        "properties": {
          "backReference": {
            "example": "author",
            "type": "string",
            "x-type": "STRING"
          },
          "cascade": {
            "type": "boolean",
            "x-type": "BOOL"
          },
          "resource": {
            "$ref": "#/components/schemas/SystemResource"
          }
        },
        "title": "Reference",
        "type": "object",
        "x-resource": "ResourceAction"
      },
      "SystemResourceActionSubType": {
        "description": "Sub Type is a type that represents a sub type of a resource. It is mostly used by STRUCT type to define the properties of the struct. ",
        "properties": {
          "description": {
            "example": "Book is a sub type of Resource. It represents a book in the system. ",
            "type": "string",
            "x-type": "STRING"
          },
          "name": {
            "example": "Book",
            "type": "string",
            "x-type": "STRING"
          },
          "properties": {
            "example": [
              {
                "name": "title",
                "type": "STRING"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/SystemResourceActionProperty"
            },
            "type": "array",
            "x-item": 17,
            "x-type": "LIST"
          },
          "title": {
            "example": "Book",
            "type": "string",
            "x-type": "STRING"
          }
        },
        "required": [
          "name",
          "properties"
        ],
        "title": "Sub Type",
        "type": "object",
        "x-resource": "ResourceAction"
      },
      "SystemResourceAuditData": {
        "description": "Audit Data is a type that represents the audit data of a resource/record. ",
        "properties": {
          "createdBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "STRING"
          },
          "createdOn": {
            "example": "2023-10-18T14:16:33+04:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "TIMESTAMP"
          },
          "updatedBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "STRING"
          },
          "updatedOn": {
            "example": "2023-10-18T14:16:33+04:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "TIMESTAMP"
          }
        },
        "title": "Audit Data",
        "type": "object",
        "x-resource": "Resource"
      },
      "SystemResourceIndex": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string",
              "x-type": "STRING"
            },
            "example": {
              "CheckVersion": "true",
              "CommonType": "testType",
              "IgnoreIfExists": "true"
            },
            "type": "object",
            "x-SpecialProperty": "true",
            "x-item": 1,
            "x-type": "MAP"
          },
          "indexType": {
            "default": "BTREE",
            "type": "string",
            "x-type": "ENUM"
          },
          "properties": {
            "items": {
              "$ref": "#/components/schemas/SystemResourceIndexProperty"
            },
            "type": "array",
            "x-item": 17,
            "x-type": "LIST"
          },
          "unique": {
            "type": "boolean",
            "x-type": "BOOL"
          }
        },
        "type": "object",
        "x-resource": "Resource"
      },
      "SystemResourceIndexProperty": {
        "properties": {
          "name": {
            "type": "string",
            "x-type": "STRING"
          },
          "order": {
            "default": "ASC",
            "type": "string",
            "x-type": "ENUM"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-resource": "Resource"
      },
      "SystemResourceProperty": {
        "description": "Property is a type that represents a property of a resource. It is like an API properties or properties of class in a programming language",
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string",
              "x-type": "STRING"
            },
            "example": {
              "CheckVersion": "true",
              "CommonType": "testType",
              "IgnoreIfExists": "true"
            },
            "type": "object",
            "x-SpecialProperty": "true",
            "x-item": 1,
            "x-type": "MAP"
          },
          "defaultValue": {
            "example": "Lord of the Rings",
            "type": "object",
            "x-type": "OBJECT"
          },
          "description": {
            "example": "Book Title is a property of Book Resource. It represents the title of the book.",
            "type": "string",
            "x-type": "STRING"
          },
          "enumValues": {
            "example": [
              "UNKNOWN",
              "ASC",
              "DESC"
            ],
            "items": {
              "type": "string",
              "x-type": "STRING"
            },
            "type": "array",
            "x-item": 1,
            "x-type": "LIST"
          },
          "exampleValue": {
            "example": "no-book-name",
            "type": "object",
            "x-type": "OBJECT"
          },
          "immutable": {
            "default": false,
            "type": "boolean",
            "x-type": "BOOL"
          },
          "item": {
            "$ref": "#/components/schemas/SystemResourceProperty"
          },
          "length": {
            "default": 256,
            "example": 256,
            "format": "int32",
            "type": "number",
            "x-type": "INT32"
          },
          "name": {
            "example": "title",
            "type": "string",
            "x-type": "STRING"
          },
          "primary": {
            "default": false,
            "type": "boolean",
            "x-type": "BOOL"
          },
          "reference": {
            "$ref": "#/components/schemas/SystemResourceReference"
          },
          "required": {
            "default": false,
            "type": "boolean",
            "x-type": "BOOL"
          },
          "title": {
            "example": "Book Title",
            "type": "string",
            "x-type": "STRING"
          },
          "type": {
            "example": "STRING",
            "type": "string",
            "x-type": "ENUM"
          },
          "typeRef": {
            "example": "BookPublishingDetails",
            "type": "string",
            "x-type": "STRING"
          },
          "unique": {
            "default": false,
            "type": "boolean",
            "x-type": "BOOL"
          }
        },
        "required": [
          "type",
          "primary",
          "required",
          "unique",
          "immutable",
          "length"
        ],
        "title": "Property",
        "type": "object",
        "x-resource": "Resource"
      },
      "SystemResourceReference": {
        "description": "Reference is a type that represents a reference to another resource. It is used to define the reference to another resource. ",
        "properties": {
          "backReference": {
            "example": "author",
            "type": "string",
            "x-type": "STRING"
          },
          "cascade": {
            "type": "boolean",
            "x-type": "BOOL"
          },
          "resource": {
            "$ref": "#/components/schemas/SystemResource"
          }
        },
        "title": "Reference",
        "type": "object",
        "x-resource": "Resource"
      },
      "SystemResourceSubType": {
        "description": "Sub Type is a type that represents a sub type of a resource. It is mostly used by STRUCT type to define the properties of the struct. ",
        "properties": {
          "description": {
            "example": "Book is a sub type of Resource. It represents a book in the system. ",
            "type": "string",
            "x-type": "STRING"
          },
          "name": {
            "example": "Book",
            "type": "string",
            "x-type": "STRING"
          },
          "properties": {
            "example": [
              {
                "name": "title",
                "type": "STRING"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/SystemResourceProperty"
            },
            "type": "array",
            "x-item": 17,
            "x-type": "LIST"
          },
          "title": {
            "example": "Book",
            "type": "string",
            "x-type": "STRING"
          }
        },
        "required": [
          "name",
          "properties"
        ],
        "title": "Sub Type",
        "type": "object",
        "x-resource": "Resource"
      },
      "SystemRole": {
        "properties": {
          "auditData": {
            "$ref": "#/components/schemas/SystemRoleAuditData"
          },
          "details": {
            "type": "object",
            "x-type": "OBJECT"
          },
          "id": {
            "example": "a39621a4-6d48-11ee-b962-0242ac120002",
            "format": "uuid",
            "type": "string",
            "x-PrimaryProperty": "true",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "UUID"
          },
          "name": {
            "type": "string",
            "uniqueItems": true,
            "x-IsHclLabel": "true",
            "x-type": "STRING"
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/SystemPermission"
            },
            "type": "array",
            "x-item": 15,
            "x-type": "LIST"
          },
          "version": {
            "default": 1,
            "example": 1,
            "format": "int32",
            "type": "number",
            "x-AllowEmptyPrimitive": "true",
            "x-SpecialProperty": "true",
            "x-type": "INT32"
          }
        },
        "required": [
          "id",
          "version",
          "name"
        ],
        "type": "object",
        "x-resource": "Role"
      },
      "SystemRoleAuditData": {
        "description": "Audit Data is a type that represents the audit data of a resource/record. ",
        "properties": {
          "createdBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "STRING"
          },
          "createdOn": {
            "example": "2023-10-18T14:16:33+04:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "TIMESTAMP"
          },
          "updatedBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "STRING"
          },
          "updatedOn": {
            "example": "2023-10-18T14:16:33+04:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "TIMESTAMP"
          }
        },
        "title": "Audit Data",
        "type": "object",
        "x-resource": "Role"
      },
      "SystemUser": {
        "properties": {
          "auditData": {
            "$ref": "#/components/schemas/SystemUserAuditData"
          },
          "details": {
            "type": "object",
            "x-type": "OBJECT"
          },
          "id": {
            "example": "a39621a4-6d48-11ee-b962-0242ac120002",
            "format": "uuid",
            "type": "string",
            "x-PrimaryProperty": "true",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "UUID"
          },
          "password": {
            "type": "string",
            "x-type": "STRING"
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/SystemPermission"
            },
            "type": "array",
            "x-item": 15,
            "x-type": "LIST"
          },
          "roles": {
            "items": {
              "$ref": "#/components/schemas/SystemRole"
            },
            "type": "array",
            "x-item": 15,
            "x-type": "LIST"
          },
          "username": {
            "type": "string",
            "uniqueItems": true,
            "x-IsHclLabel": "true",
            "x-type": "STRING"
          },
          "version": {
            "default": 1,
            "example": 1,
            "format": "int32",
            "type": "number",
            "x-AllowEmptyPrimitive": "true",
            "x-SpecialProperty": "true",
            "x-type": "INT32"
          }
        },
        "required": [
          "id",
          "version",
          "username"
        ],
        "type": "object",
        "x-resource": "User"
      },
      "SystemUserAuditData": {
        "description": "Audit Data is a type that represents the audit data of a resource/record. ",
        "properties": {
          "createdBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "STRING"
          },
          "createdOn": {
            "example": "2023-10-18T14:16:33+04:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "TIMESTAMP"
          },
          "updatedBy": {
            "example": "admin",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "STRING"
          },
          "updatedOn": {
            "example": "2023-10-18T14:16:33+04:00",
            "format": "datetime",
            "type": "string",
            "x-SpecialProperty": "true",
            "x-type": "TIMESTAMP"
          }
        },
        "title": "Audit Data",
        "type": "object",
        "x-resource": "User"
      },
      "Token": {
        "example": {
          "content": "eyJhbGciOiJSUzI1NiIsI-8pl63y8h-ZOLM",
          "expiration": "2023-10-16T15:14:11.161530Z",
          "term": "SHORT"
        },
        "properties": {
          "content": {
            "type": "string"
          },
          "expiration": {
            "format": "date-time",
            "type": "string"
          },
          "term": {
            "$ref": "#/components/schemas/TokenTerm"
          }
        },
        "type": "object"
      },
      "TokenTerm": {
        "enum": [
          "VERY_SHORT",
          "SHORT",
          "MIDDLE",
          "LONG",
          "VERY_LONG"
        ],
        "example": "LONG",
        "format": "enum",
        "type": "string"
      },
      "Book": {
        "properties": {
          "description": {
            "type": "string",
            "x-type": "STRING"
          },
          "id": {
            "example": "a39621a4-6d48-11ee-b962-0242ac120002",
            "format": "uuid",
            "type": "string",
            "x-PrimaryProperty": "true",
            "x-SpecialProperty": "true",
            "x-immutable": true,
            "x-type": "UUID"
          },
          "name": {
            "type": "string",
            "uniqueItems": true,
            "x-type": "STRING"
          },
          "version": {
            "default": 1,
            "example": 1,
            "format": "int32",
            "type": "number",
            "x-AllowEmptyPrimitive": "true",
            "x-SpecialProperty": "true",
            "x-type": "INT32"
          }
        },
        "required": [
          "id",
          "name",
          "version"
        ],
        "type": "object",
        "x-resource": "Book"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "name": "API Brew"
    },
    "description": "OpenApi 3.0 definition for API Brew Rest API",
    "license": {
      "name": "Apache License",
      "url": "https://github.com/google/gnostic/blob/master/LICENSE"
    },
    "title": "API Brew",
    "version": "1.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/authentication/token": {
      "post": {
        "description": "The access token is used to authenticate the user for all the endpoints which needs authentication.",
        "operationId": "getAuthenticationToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            },
            "description": "Authentication Response"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "code": "RECORD_VALIDATION_ERROR",
                  "message": "json: cannot unmarshal number into Go struct field AuthenticationRequest.password of type string"
                }
              }
            },
            "description": "Unauthorized"
          },
          "401": {
            "content": {
              "application/json": {
                "example": {
                  "code": "AUTHENTICATION_FAILED",
                  "message": "Authentication failed"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "summary": "This endpoint is used to authenticate the user and get the access token.",
        "tags": [
          "Authentication"
        ]
      },
      "put": {
        "description": "The access token is used to authenticate the user for all the endpoints which needs authentication.",
        "operationId": "refreshAuthenticationToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            },
            "description": "Authentication Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "This endpoint is used to refresh the access token.",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/resources": {
      "get": {
        "description": "The access token is used to authenticate the user for all the endpoints which needs authentication.",
        "operationId": "getResources",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SystemResource"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List of resources"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "This endpoint is used to get the list of resources.",
        "tags": [
          "Resources"
        ]
      },
      "post": {
        "description": "The access token is used to authenticate the user for all the endpoints which needs authentication.",
        "operationId": "createResource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemResource"
                }
              }
            },
            "description": "Created resource"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "This endpoint is used to create a new resource.",
        "tags": [
          "Resources"
        ]
      }
    },
    "/resources/by-name/{namespace}/{name}": {
      "get": {
        "description": "The access token is used to authenticate the user for all the endpoints which needs authentication.",
        "operationId": "getResourceByName",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemResource"
                }
              }
            },
            "description": "Resource"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "This endpoint is used to get a resource by name.",
        "tags": [
          "Resources"
        ]
      }
    },
    "/resources/{id}": {
      "delete": {
        "description": "The access token is used to authenticate the user for all the endpoints which needs authentication.",
        "operationId": "deleteResource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null,
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "This endpoint is used to delete a resource.",
        "tags": [
          "Resources"
        ]
      },
      "get": {
        "description": "The access token is used to authenticate the user for all the endpoints which needs authentication.",
        "operationId": "getResource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemResource"
                }
              }
            },
            "description": "Resource"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "This endpoint is used to get a resource.",
        "tags": [
          "Resources"
        ]
      },
      "put": {
        "description": "The access token is used to authenticate the user for all the endpoints which needs authentication.",
        "operationId": "updateResource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemResource"
              }
            }
          },
          "required": true
        },
        "responses": null,
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "This endpoint is used to update a resource.",
        "tags": [
          "Resources"
        ]
      }
    },
    "/system-permission": {
      "description": "Api for Permission",
      "get": {
        "description": "Api for Permission - List items",
        "operationId": "listPermission",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "items": {
                        "$ref": "#/components/schemas/SystemPermission"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Permission - List items",
        "tags": [
          "system / Permission API"
        ]
      },
      "patch": {
        "description": "Api for Permission - Apply an item, it will check id and unique properties, if such item is exists, update operation will be executed, if not create operation is executed. If There are no change between updating record and existing record, nothing will be done",
        "operationId": "applyPermission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemPermission"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemPermission"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Permission - Apply an item",
        "tags": [
          "system / Permission API"
        ]
      },
      "post": {
        "description": "Api for Permission - Create new item",
        "operationId": "createPermission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemPermission"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemPermission"
                }
              }
            },
            "description": "Created item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Permission - Create new item",
        "tags": [
          "system / Permission API"
        ]
      },
      "summary": "Permission"
    },
    "/system-permission/_search": {
      "description": "Api for Permission - Search",
      "post": {
        "description": "Api for Permission - Search items",
        "operationId": "searchPermission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRecordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemPermission"
                    }
                  }
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Permission - Search items",
        "tags": [
          "system / Permission API"
        ]
      },
      "summary": "Permission - Search"
    },
    "/system-permission/{id}": {
      "delete": {
        "description": "Api for Permission - Delete item",
        "operationId": "deletePermission",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemPermission"
                    }
                  }
                }
              }
            },
            "description": "Deleted item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Permission - Delete item",
        "tags": [
          "system / Permission API"
        ]
      },
      "description": "Api for Permission",
      "get": {
        "description": "Api for Permission - Get item",
        "operationId": "getPermission",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemPermission"
                    }
                  }
                }
              }
            },
            "description": "Item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Permission - Get item",
        "tags": [
          "system / Permission API"
        ]
      },
      "put": {
        "description": "Api for Permission - Update item",
        "operationId": "updatePermission",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemPermission"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemPermission"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Permission - Update item",
        "tags": [
          "system / Permission API"
        ]
      },
      "summary": "Permission"
    },
    "/system-role": {
      "description": "Api for Role",
      "get": {
        "description": "Api for Role - List items",
        "operationId": "listRole",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "items": {
                        "$ref": "#/components/schemas/SystemRole"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Role - List items",
        "tags": [
          "system / Role API"
        ]
      },
      "patch": {
        "description": "Api for Role - Apply an item, it will check id and unique properties, if such item is exists, update operation will be executed, if not create operation is executed. If There are no change between updating record and existing record, nothing will be done",
        "operationId": "applyRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemRole"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Role - Apply an item",
        "tags": [
          "system / Role API"
        ]
      },
      "post": {
        "description": "Api for Role - Create new item",
        "operationId": "createRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemRole"
                }
              }
            },
            "description": "Created item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Role - Create new item",
        "tags": [
          "system / Role API"
        ]
      },
      "summary": "Role"
    },
    "/system-role/_search": {
      "description": "Api for Role - Search",
      "post": {
        "description": "Api for Role - Search items",
        "operationId": "searchRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRecordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemRole"
                    }
                  }
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Role - Search items",
        "tags": [
          "system / Role API"
        ]
      },
      "summary": "Role - Search"
    },
    "/system-role/{id}": {
      "delete": {
        "description": "Api for Role - Delete item",
        "operationId": "deleteRole",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemRole"
                    }
                  }
                }
              }
            },
            "description": "Deleted item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Role - Delete item",
        "tags": [
          "system / Role API"
        ]
      },
      "description": "Api for Role",
      "get": {
        "description": "Api for Role - Get item",
        "operationId": "getRole",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemRole"
                    }
                  }
                }
              }
            },
            "description": "Item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Role - Get item",
        "tags": [
          "system / Role API"
        ]
      },
      "put": {
        "description": "Api for Role - Update item",
        "operationId": "updateRole",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemRole"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Role - Update item",
        "tags": [
          "system / Role API"
        ]
      },
      "summary": "Role"
    },
    "/system-user": {
      "description": "Api for User",
      "get": {
        "description": "Api for User - List items",
        "operationId": "listUser",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "items": {
                        "$ref": "#/components/schemas/SystemUser"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "User - List items",
        "tags": [
          "system / User API"
        ]
      },
      "patch": {
        "description": "Api for User - Apply an item, it will check id and unique properties, if such item is exists, update operation will be executed, if not create operation is executed. If There are no change between updating record and existing record, nothing will be done",
        "operationId": "applyUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemUser"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "User - Apply an item",
        "tags": [
          "system / User API"
        ]
      },
      "post": {
        "description": "Api for User - Create new item",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemUser"
                }
              }
            },
            "description": "Created item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "User - Create new item",
        "tags": [
          "system / User API"
        ]
      },
      "summary": "User"
    },
    "/system-user/_search": {
      "description": "Api for User - Search",
      "post": {
        "description": "Api for User - Search items",
        "operationId": "searchUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRecordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemUser"
                    }
                  }
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "User - Search items",
        "tags": [
          "system / User API"
        ]
      },
      "summary": "User - Search"
    },
    "/system-user/{id}": {
      "delete": {
        "description": "Api for User - Delete item",
        "operationId": "deleteUser",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemUser"
                    }
                  }
                }
              }
            },
            "description": "Deleted item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "User - Delete item",
        "tags": [
          "system / User API"
        ]
      },
      "description": "Api for User",
      "get": {
        "description": "Api for User - Get item",
        "operationId": "getUser",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemUser"
                    }
                  }
                }
              }
            },
            "description": "Item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "User - Get item",
        "tags": [
          "system / User API"
        ]
      },
      "put": {
        "description": "Api for User - Update item",
        "operationId": "updateUser",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemUser"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "User - Update item",
        "tags": [
          "system / User API"
        ]
      },
      "summary": "User"
    },
    "/{namespace}-{resource}": {
      "description": "A generic record resource. All Apis are extended from Generic Record resource",
      "get": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - List items",
        "operationId": "listRecord",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "items": {
                        "additionalProperties": true,
                        "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                        "title": "Generic Record"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - List items",
        "tags": [
          "Records Generic API"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "namespace",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "resource",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - Apply an item, it will check id and unique properties, if such item is exists, update operation will be executed, if not create operation is executed. If There are no change between updating record and existing record, nothing will be done",
        "operationId": "applyRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                "title": "Generic Record"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                  "title": "Generic Record"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Apply an item",
        "tags": [
          "Records Generic API"
        ]
      },
      "post": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - Create new item",
        "operationId": "createRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                "title": "Generic Record"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                  "title": "Generic Record"
                }
              }
            },
            "description": "Created item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Create new item",
        "tags": [
          "Records Generic API"
        ]
      },
      "summary": "Generic Record"
    },
    "/{namespace}-{resource}/{id}": {
      "delete": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - Delete item",
        "operationId": "deleteRecord",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "additionalProperties": true,
                      "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                      "title": "Generic Record"
                    }
                  }
                }
              }
            },
            "description": "Deleted item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Delete item",
        "tags": [
          "Records Generic API"
        ]
      },
      "description": "A generic record resource. All Apis are extended from Generic Record resource",
      "get": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - Get item",
        "operationId": "getRecord",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "additionalProperties": true,
                      "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                      "title": "Generic Record"
                    }
                  }
                }
              }
            },
            "description": "Item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Get item",
        "tags": [
          "Records Generic API"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "namespace",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "resource",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - Update item",
        "operationId": "updateRecord",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                "title": "Generic Record"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                  "title": "Generic Record"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Update item",
        "tags": [
          "Records Generic API"
        ]
      },
      "summary": "Generic Record"
    },
    "/{namespace}-{resource}/{id}/_search": {
      "description": "A generic record resource. All Apis are extended from Generic Record resource - Search",
      "parameters": [
        {
          "in": "path",
          "name": "namespace",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "resource",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - Search items",
        "operationId": "searchRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRecordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "additionalProperties": true,
                      "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                      "title": "Generic Record"
                    }
                  }
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Search items",
        "tags": [
          "Records Generic API"
        ]
      },
      "summary": "Generic Record - Search"
    },
    "/{namespace}-{resource}/{id}/{action}": {
      "parameters": [
        {
          "in": "path",
          "name": "namespace",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "resource",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "operationId": "actionRecord",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "additionalProperties": true,
                      "description": "It is a generic payload, it has not a specific structure without knowledge of resource. For each resource this structure is shaped accordingly",
                      "title": "Generic Record"
                    }
                  }
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Records Generic API"
        ]
      },
      "summary": "Generic Record - Action"
    },
    "/book": {
      "description": "Api for Book",
      "get": {
        "description": "Api for Book - List items",
        "operationId": "listBook",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "items": {
                        "$ref": "#/components/schemas/Book"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Book - List items",
        "tags": [
          "Book API"
        ]
      },
      "patch": {
        "description": "Api for Book - Apply an item, it will check id and unique properties, if such item is exists, update operation will be executed, if not create operation is executed. If There are no change between updating record and existing record, nothing will be done",
        "operationId": "applyBook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Book - Apply an item",
        "tags": [
          "Book API"
        ]
      },
      "post": {
        "description": "Api for Book - Create new item",
        "operationId": "createBook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            },
            "description": "Created item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Book - Create new item",
        "tags": [
          "Book API"
        ]
      },
      "summary": "Book"
    },
    "/book/_search": {
      "description": "Api for Book - Search",
      "post": {
        "description": "Api for Book - Search items",
        "operationId": "searchBook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRecordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/Book"
                    }
                  }
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Book - Search items",
        "tags": [
          "Book API"
        ]
      },
      "summary": "Book - Search"
    },
    "/book/{id}": {
      "delete": {
        "description": "Api for Book - Delete item",
        "operationId": "deleteBook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/Book"
                    }
                  }
                }
              }
            },
            "description": "Deleted item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Book - Delete item",
        "tags": [
          "Book API"
        ]
      },
      "description": "Api for Book",
      "get": {
        "description": "Api for Book - Get item",
        "operationId": "getBook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/Book"
                    }
                  }
                }
              }
            },
            "description": "Item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Book - Get item",
        "tags": [
          "Book API"
        ]
      },
      "put": {
        "description": "Api for Book - Update item",
        "operationId": "updateBook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Book - Update item",
        "tags": [
          "Book API"
        ]
      },
      "summary": "Book"
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "description": "Authentication APIs are used to authenticate users and get access to the resources. For all endpoints, which needs you to be authenticated, you need to pass the access token in the header.\n                The access token is obtained by calling the authenticate endpoint.",
      "name": "Authentication"
    }
  ]
}
